[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/event.js",
    "memberof": null,
    "longname": "src/event.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @ignore */\nexport class EventEmitter {\n\tconstructor() {\n\t\tthis._listeners = [];\n\t}\n\n\ton(event, listener) {\n\t\tif (typeof event !== \"string\") {\n\t\t\tthrow new TypeError(\"Event has to have a string as the name\");\n\t\t} else if (typeof listener !== \"function\") {\n\t\t\tthrow new TypeError(\"Listener has to be a function\");\n\t\t}\n\t\tthis._listeners.push([event, listener]);\n\t}\n\n\toff(event, listener) {\n\t\tconst toRemove = [];\n\t\tthis._listeners.forEach((ev, index) => {\n\t\t\tif (ev[0] === event && ev[1] === listener) {\n\t\t\t\ttoRemove.push(index);\n\t\t\t}\n\t\t});\n\t\ttoRemove.forEach(index => {\n\t\t\tthis._listeners.splice(index, 1);\n\t\t});\n\t}\n\n\temit(event, argument) {\n\t\tthis._listeners.forEach(ev => {\n\t\t\tif (ev[0] === event) {\n\t\t\t\tev[1](argument);\n\t\t\t}\n\t\t});\n\t}\n}\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EventEmitter",
    "memberof": "src/event.js",
    "longname": "src/event.js~EventEmitter",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/event.js",
    "importStyle": "{EventEmitter}",
    "description": null,
    "lineNumber": 2,
    "ignore": true,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/event.js~EventEmitter",
    "longname": "src/event.js~EventEmitter#constructor",
    "access": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_listeners",
    "memberof": "src/event.js~EventEmitter",
    "longname": "src/event.js~EventEmitter#_listeners",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "src/event.js~EventEmitter",
    "longname": "src/event.js~EventEmitter#on",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 5,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "src/event.js~EventEmitter",
    "longname": "src/event.js~EventEmitter#off",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "listener",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 6,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "emit",
    "memberof": "src/event.js~EventEmitter",
    "longname": "src/event.js~EventEmitter#emit",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "argument",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 7,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export { TileMap } from \"./tilemap\";\nexport { TileLayer } from \"./tilelayer\";\nexport { TileArea } from \"./tilearea\";\nexport { Tile } from \"./tile\";\nexport { TileSet } from \"./tileset\";\n"
  },
  {
    "__docId__": 8,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/propertyObject.js",
    "memberof": null,
    "longname": "src/propertyObject.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * An object representing generic properties most things in a TileMap can have.\n */\nexport class PropertyObject {\n\t/**\n\t * PropertyObject constructor.\n\t *\n\t * @param {[[key, value]]} properties - The default properties for this object expressed in key value pairs.\n\t *\n\t * @example\n\t * // The value part of the key value array can litterally be anything that\n\t * // you can serialize to JSON. In this case, we use a string and another\n\t * // array containing an object.\n\t * const properties = new PropertyObject(\n\t *     [[\"environment\", \"spooky\"], [\"connections\", [\n\t *         { map: \"otherMap\", location: \"top\", xOffset: 5 }\n\t *     ]]]\n\t * );\n\t */\n\tconstructor(properties) {\n\t\tthis._map = new Map();\n\n\t\tif (!properties) return;\n\t\tlet array;\n\t\tif (properties instanceof PropertyObject) {\n\t\t\tarray = properties.getAll();\n\t\t} else if (properties instanceof Array) {\n\t\t\tarray = properties;\n\t\t} else {\n\t\t\tthrow new TypeError(\"A property object can not be created from object of type \" + typeof properties);\n\t\t}\n\t\tfor (let [key, value] of array) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the amount of properties in the object.\n\t *\n\t * @returns {number} The amount of properties.\n\t */\n\tget size() {\n\t\treturn this._map.size;\n\t}\n\n\t/**\n\t * Gets a value from the properties.\n\t *\n\t * @param {string} key - The key of the value.\n\t *\n\t * @returns The value that is assigned to the key. Will be undefined if no value has been assigned yet.\n\t */\n\tget(key) {\n\t\tif (typeof key !== \"string\") throw new TypeError(\"Key has to be a string\");\n\t\treturn this._map.get(key);\n\t}\n\n\t/**\n\t * Gets all properties of this object.\n\t *\n\t * @returns A key-value pair 2D array. [[k, v], [k, v]... etc.]\n\t */\n\tgetAll() {\n\t\tconst toReturn = [];\n\t\tfor (let value of this._map) {\n\t\t\ttoReturn.push(value);\n\t\t}\n\t\treturn toReturn;\n\t}\n\n\t/**\n\t * Sets a property of this object.\n\t *\n\t * This will throw an error if types are invalid. Keys have to be strings and\n\t * values have to be serializable into JSON.\n\t *\n\t * @param {string} key - The desired key of the property.\n\t * @param value - The desired value of the property.\n\t */\n\tset(key, value) {\n\t\tif (typeof key === \"string\" && JSON.stringify(value)) {\n\t\t\tthis._map.set(key, value);\n\t\t} else {\n\t\t\tthrow TypeError(\"Invalid key or value\");\n\t\t}\n\t}\n\n\t/**\n\t * Generates a JSON compatible value from this object.\n\t *\n\t * @returns An array to represent this object.\n\t */\n\ttoJSON() {\n\t\treturn this.getAll();\n\t}\n}\n"
  },
  {
    "__docId__": 9,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PropertyObject",
    "memberof": "src/propertyObject.js",
    "longname": "src/propertyObject.js~PropertyObject",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/propertyObject.js",
    "importStyle": "{PropertyObject}",
    "description": "An object representing generic properties most things in a TileMap can have.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 10,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#constructor",
    "access": null,
    "description": "PropertyObject constructor.",
    "examples": [
      "// The value part of the key value array can litterally be anything that\n// you can serialize to JSON. In this case, we use a string and another\n// array containing an object.\nconst properties = new PropertyObject(\n    [[\"environment\", \"spooky\"], [\"connections\", [\n        { map: \"otherMap\", location: \"top\", xOffset: 5 }\n    ]]]\n);"
    ],
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "[[key, value]]"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": "The default properties for this object expressed in key value pairs."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 11,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_map",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#_map",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "size",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#size",
    "access": null,
    "description": "Gets the amount of properties in the object.",
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The amount of properties."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The amount of properties."
    },
    "type": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 13,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#get",
    "access": null,
    "description": "Gets a value from the properties.",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The value that is assigned to the key. Will be undefined if no value has been assigned yet."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key of the value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The value that is assigned to the key. Will be undefined if no value has been assigned yet."
    },
    "generator": false
  },
  {
    "__docId__": 14,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAll",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#getAll",
    "access": null,
    "description": "Gets all properties of this object.",
    "lineNumber": 63,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "A key-value pair 2D array. [[k, v], [k, v]... etc.]"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "A key-value pair 2D array. [[k, v], [k, v]... etc.]"
    },
    "generator": false
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#set",
    "access": null,
    "description": "Sets a property of this object.\n\nThis will throw an error if types are invalid. Keys have to be strings and\nvalues have to be serializable into JSON.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The desired key of the property."
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The desired value of the property."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/propertyObject.js~PropertyObject",
    "longname": "src/propertyObject.js~PropertyObject#toJSON",
    "access": null,
    "description": "Generates a JSON compatible value from this object.",
    "lineNumber": 93,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "An array to represent this object."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "An array to represent this object."
    },
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tile.js",
    "memberof": null,
    "longname": "src/tile.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { PropertyObject } from \"./propertyObject\";\nimport { EventEmitter } from \"./event\";\n\n/**\n * A tile object containing tile ID, tileset ID and custom properties.\n */\nexport class Tile extends EventEmitter {\n\t/**\n\t * Tile constructor.\n\t *\n\t * @param {object|string} options={} Options for the tile. Can also be tile data you loaded from JSON or a plain string in the following format: <tileId:tilesetId>\n\t * @param {number} options.tileId=-1 - {@link Tile#tileId}\n\t * @param {number} options.tilesetId=-1 - {@link Tile#tilesetId}\n\t * @param {string[][]} [options.properties] - {@link PropertyObject#constructor}\n\t */\n\tconstructor(options = { tileId: -1, tilesetId: -1 }) {\n\t\tsuper();\n\n\t\t/** The tile ID of the tile.\n\t\t * @type {number} */\n\t\tthis.tileId = undefined;\n\n\t\t/** The tileset ID of the tile.\n\t\t * @type {number} */\n\t\tthis.tilesetId = undefined;\n\n\t\tif (typeof options === \"string\") {\n\t\t\tconst colonIndex = options.indexOf(\":\");\n\t\t\tthis.tileId = parseInt(options.substring(0, colonIndex));\n\t\t\tthis.tilesetId = parseInt(options.substring(colonIndex + 1));\n\t\t} else {\n\t\t\tthis.tileId = options.tileId;\n\t\t\tthis.tilesetId = options.tilesetId;\n\t\t}\n\n\t\t/** Custom properties of the tile.\n\t\t * @type {PropertyObject} */\n\t\tthis.properties = new PropertyObject(options.properties);\n\t}\n\n\t/**\n\t * Sets the data for this tile.\n\t *\n\t * @param {number} tileId - The ID to assign to the tile.\n\t * @param {number} [tilesetId] - The tileset ID to assign to the tile.\n\t * @param {boolean} [replaceEmpty] - Should values less than 0 (-1) be handled (true) or ignored (false).\n\t */\n\tsetData(tileId, tilesetId, replaceEmpty) {\n\t\tconst before = [this.tileId, this.tilesetId];\n\n\t\tif (tileId >= 0 || replaceEmpty) {\n\t\t\tthis.tileId = Math.max(tileId, -1);\n\t\t}\n\t\tif (tilesetId != null && (tilesetId >= 0 || replaceEmpty)) {\n\t\t\tthis.tilesetId = Math.max(tilesetId, -1);\n\t\t}\n\n\t\tthis.emit(\"data-change\", {\n\t\t\tdata: [[before[0], before[1]], [this.tileId, this.tilesetId]],\n\t\t\ttile: this\n\t\t});\n\t}\n\n\t/**\n\t * toJSON function used for JSON serialization.\n\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior\n\t *\n\t * @returns {Tile|string} Object to be serialized\n\t */\n\ttoJSON() {\n\t\tif (this.properties.size === 0) {\n\t\t\treturn this.tileId + \":\" + this.tilesetId;\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\t/**\n\t * Creates a clone out of this tile.\n\t *\n\t * @returns {Tile} The new tile.\n\t */\n\tclone() {\n\t\treturn new Tile(this);\n\t}\n}\n"
  },
  {
    "__docId__": 18,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Tile",
    "memberof": "src/tile.js",
    "longname": "src/tile.js~Tile",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/tile.js",
    "importStyle": "{Tile}",
    "description": "A tile object containing tile ID, tileset ID and custom properties.",
    "lineNumber": 7,
    "interface": false,
    "extends": [
      "src/event.js~EventEmitter"
    ]
  },
  {
    "__docId__": 19,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#constructor",
    "access": null,
    "description": "Tile constructor.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "object",
          "string"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "Options for the tile. Can also be tile data you loaded from JSON or a plain string in the following format: <tileId:tilesetId>"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "options.tileId",
        "description": "{@link Tile#tileId}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "options.tilesetId",
        "description": "{@link Tile#tilesetId}"
      },
      {
        "nullable": null,
        "types": [
          "string[][]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.properties",
        "description": "{@link PropertyObject#constructor}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tileId",
    "access": null,
    "description": "The tile ID of the tile.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 21,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tilesetId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tilesetId",
    "access": null,
    "description": "The tileset ID of the tile.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 22,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tileId",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tilesetId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tilesetId",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tileId",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tilesetId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tilesetId",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "properties",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#properties",
    "access": null,
    "description": "Custom properties of the tile.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 27,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setData",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#setData",
    "access": null,
    "description": "Sets the data for this tile.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tileId",
        "description": "The ID to assign to the tile."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "tilesetId",
        "description": "The tileset ID to assign to the tile."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "replaceEmpty",
        "description": "Should values less than 0 (-1) be handled (true) or ignored (false)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tileId",
    "access": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tilesetId",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#tilesetId",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#toJSON",
    "access": null,
    "description": "toJSON function used for JSON serialization.",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#toJSON()_behavior"
    ],
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tile|string} Object to be serialized"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Tile",
        "string"
      ],
      "spread": false,
      "description": "Object to be serialized"
    },
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "src/tile.js~Tile",
    "longname": "src/tile.js~Tile#clone",
    "access": null,
    "description": "Creates a clone out of this tile.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tile} The new tile."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Tile"
      ],
      "spread": false,
      "description": "The new tile."
    },
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tilearea.js",
    "memberof": null,
    "longname": "src/tilearea.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Tile } from \"./tile\";\n\nimport { EventEmitter } from \"./event\";\n\n/**\n * A tile area object with a size and tiles.\n */\nexport class TileArea extends EventEmitter {\n\t/**\n\t * TileArea constructor.\n\t *\n\t * @param {number} width - {@link TileArea#width}\n\t * @param {number} height - {@link TileArea#height}\n\t * @param {Tile[]} tiles - {@link TileArea#tiles}\n\t */\n\tconstructor(width, height, tiles) {\n\t\tsuper();\n\n\t\t/** The width of the tile area.\n\t\t * @type {number} */\n\t\tthis.width = width;\n\t\t/** The height of the tile area.\n\t\t * @type {number} */\n\t\tthis.height = height;\n\n\t\t/** The tiles in the tile area\n\t\t * @type {Tile[]} */\n\t\tthis.tiles = tiles.map(tile => {\n\t\t\tif (!(tile instanceof Tile)) {\n\t\t\t\tthrow new TypeError(\"All tiles in a TileArea has to be of the Tile type.\");\n\t\t\t}\n\t\t\treturn tile;\n\t\t});\n\n\t\tif (this.width * this.height !== this.tiles.length) {\n\t\t\tthrow new RangeError(\"The width and height doesn't match the amount of tiles given.\");\n\t\t}\n\t}\n\n\t/**\n\t * Gets the index of a tile in the tile array from a position.\n\t *\n\t * @param {number} x - The x coordinate of the tile.\n\t * @param {number} y - The y coordinate of the tile.\n\t *\n\t * @returns {number} The index of the tile in the main array.\n\t */\n\tgetTileIndex(x, y) {\n\t\tif (!this._inRange(x, y)) {\n\t\t\tthrow new RangeError();\n\t\t}\n\t\treturn y * this.width + x;\n\t}\n\n\t/**\n\t * Gets an area of tiles.\n\t *\n\t * @param {number} x - The x coordinate of the tile area.\n\t * @param {number} y - The y coordinate of the tile area.\n\t * @param {number} width - The width of the tile area.\n\t * @param {number} height - The height of the tile area.\n\t *\n\t * @returns {TileArea} A {@link TileArea} of the area requested.\n\t */\n\tgetTileArea(x, y, width, height) {\n\t\tif (!this._inRange(x, y, width, height)) {\n\t\t\tthrow new RangeError();\n\t\t}\n\t\tconst tiles = [];\n\t\tfor (let ly = y; ly < y + height; ly++) {\n\t\t\tfor (let lx = x; lx < x + width; lx++) {\n\t\t\t\ttiles.push(this.tiles[this.getTileIndex(lx, ly)]);\n\t\t\t}\n\t\t}\n\t\treturn new TileArea(width, height, tiles);\n\t}\n\n\t/**\n\t * Gets tiling data from this TileArea.\n\t *\n\t * Most of the time when mapping tilemaps, having the pen be \"tiling\" is more\n\t * useful than having it overwrite everywhere. This function is meant to provide\n\t * that kind of functionallity.\n\t *\n\t * @param {number} originX - The x coordinate to tile from.\n\t * @param {number} originY - The y coordinate to tile from.\n\t * @param {number} x - The x coordinate to get data from.\n\t * @param {number} y - The y coordinate to get data from.\n\t *\n\t * @returns {Tile} The calculated tile.\n\t */\n\tgetTilingTileData(originX, originY, x, y) {\n\t\tconst tileX = ((x - originX) % this.width + this.width) % this.width;\n\t\tconst tileY = ((y - originY) % this.height + this.height) % this.height;\n\n\t\tconst tile = this.tiles[this.getTileIndex(tileX, tileY)];\n\n\t\treturn tile.clone();\n\t}\n\n\t/**\n\t * Inserts a TileArea into this TileArea.\n\t *\n\t * This isertion does not fail if it goes outside of the TileArea.\n\t *\n\t * @param {number} x - Top left x coordinate of where the TileArea should be inserted.\n\t * @param {number} y - Top left y coordinate of where the TileArea should be inserted.\n\t * @param {TileArea} tileArea - The TileArea to be inserted.\n\t * @param {boolean} skipEmpty - If the insertion should skip empty (-1) tiles.\n\t */\n\tinsertTileArea(x, y, tileArea, skipEmpty) {\n\t\tfor (let lx = x; lx < x + tileArea.width; lx++) {\n\t\t\tfor (let ly = y; ly < y + tileArea.height; ly++) {\n\t\t\t\ttry {\n\t\t\t\t\tconst newTile = tileArea.tiles[tileArea.getTileIndex(lx - x, ly - y)];\n\t\t\t\t\tif (skipEmpty && newTile.tileId === -1) continue;\n\n\t\t\t\t\tthis.tiles[this.getTileIndex(lx, ly)]\n\t\t\t\t\t\t.setData(newTile.tileId, newTile.tilesetId);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e instanceof RangeError) continue; else throw e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fills an area (think bucket tool in GIMP).\n\t *\n\t * @param {number} x - The x coordinate of where to fill from.\n\t * @param {number} y - The y coordinate of where to fill from.\n\t * @param {TileArea} tileArea - The TileAre to fill with (tiling).\n\t */\n\tfillAt(x, y, tileArea) {\n\t\tlet positions = [];\n\n\t\tconst getTile = (x, y) => this.tiles[this.getTileIndex(x, y)];\n\t\tconst fillTile = getTile(x, y).clone();\n\t\tconst seeds = [{ x, y }];\n\n\t\tconst testSeed = (x, y, verticalModifier) => {\n\t\t\tconst newY = y + verticalModifier;\n\t\t\tif (newY >= 0 && newY < this.height &&\n\t\t\t\tgetTile(x, newY).tileId === fillTile.tileId) {\n\t\t\t\tif (x <= 0 ||\n\t\t\t\t\tgetTile(x - 1, newY).tileId !== fillTile.tileId ||\n\t\t\t\t\tgetTile(x - 1, y).tileId !== fillTile.tileId) {\n\t\t\t\t\tseeds.push({ x, y: newY });\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst appliedPositions = new Set();\n\t\tconst positionToIndex = pos => pos.y * this.width + pos.x;\n\n\t\tdo {\n\t\t\tconst seed = seeds[0];\n\t\t\tlet { x: lx, y: ly } = seed;\n\n\t\t\tif (appliedPositions.has(positionToIndex(seed))) {\n\t\t\t\tseeds.splice(0, 1);\n\t\t\t\tcontinue;\n\t\t\t};\n\n\t\t\tdo {\n\t\t\t\tpositions.push({ x: lx, y: ly });\n\t\t\t\ttestSeed(lx, ly, 1);\n\t\t\t\ttestSeed(lx, ly, -1);\n\t\t\t\tlx++;\n\t\t\t} while (lx < this.width && getTile(lx, ly).tileId === fillTile.tileId);\n\n\t\t\tlx = seed.x;\n\t\t\tly = seed.y;\n\t\t\twhile (lx > 0 && getTile(lx - 1, ly).tileId === fillTile.tileId) {\n\t\t\t\tlx--;\n\t\t\t\tpositions.push({ x: lx, y: ly });\n\t\t\t\ttestSeed(lx, ly, 1);\n\t\t\t\ttestSeed(lx, ly, -1);\n\t\t\t}\n\n\t\t\tseeds.splice(0, 1);\n\t\t\tpositions.forEach(position => {\n\t\t\t\tappliedPositions.add(positionToIndex(position));\n\n\t\t\t\tconst { tileId, tilesetId } = tileArea.getTilingTileData(\n\t\t\t\t\tx, y, position.x, position.y\n\t\t\t\t);\n\t\t\t\tgetTile(position.x, position.y).setData(tileId, tilesetId);\n\t\t\t});\n\t\t\tpositions = [];\n\t\t} while (seeds.length > 0);\n\t}\n\n\t/**\n\t * Resizes the TileArea, inserting empty tiles if grown and removing tiles if shrunk.\n\t *\n\t * Keep in mind that this function is currently really slow. It works, but it's just\n\t * very slow. Just ping me or send a PR if you need it to be faster. For now\n\t * though, don't call it every frame, but rather once you're certain you need\n\t * to resize.\n\t *\n\t * @param {number} width - The new width of the TileArea.\n\t * @param {number} height - The new height of the TileArea.\n\t */\n\tresize(width, height) {\n\t\t// Shrink\n\t\tif (width < this.width) {\n\t\t\tthis.tiles = this.getTileArea(0, 0, width, this.height).tiles;\n\t\t\tthis.width = width;\n\t\t}\n\t\tif (height < this.height) {\n\t\t\tthis.tiles = this.getTileArea(0, 0, this.width, height).tiles;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Grow\n\t\tif (width > this.width) {\n\t\t\tlet offset = 0;\n\t\t\tfor (let y = 0; y < this.height; y++) {\n\t\t\t\tconst startIndex = this.getTileIndex(this.width - 1, y) + offset + 1;\n\t\t\t\tfor (let x = 0; x < width - this.width; x++) {\n\t\t\t\t\tthis.tiles.splice(startIndex + x, 0, new Tile());\n\t\t\t\t\toffset++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.width = width;\n\t\t}\n\t\tif (height > this.height) {\n\t\t\tlet offset = 0;\n\t\t\tfor (let y = this.height; y < height; y++) {\n\t\t\t\tconst startIndex = this.getTileIndex(this.width - 1, this.height - 1) + offset + 1;\n\t\t\t\tfor (let x = 0; x < this.width; x++) {\n\t\t\t\t\tthis.tiles.splice(startIndex + x, 0, new Tile());\n\t\t\t\t\toffset++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.height = height;\n\t\t}\n\t}\n\n\t_inRange(x, y, width = 1, height = 1) {\n\t\treturn !(x < 0 || x >= this.width ||\n\t\t\ty < 0 || y > this.height ||\n\t\t\twidth <= 0 || x + width > this.width ||\n\t\t\theight <= 0 || y + height > this.height\n\t\t);\n\t}\n}\n"
  },
  {
    "__docId__": 33,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TileArea",
    "memberof": "src/tilearea.js",
    "longname": "src/tilearea.js~TileArea",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/tilearea.js",
    "importStyle": "{TileArea}",
    "description": "A tile area object with a size and tiles.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/event.js~EventEmitter"
    ]
  },
  {
    "__docId__": 34,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#constructor",
    "access": null,
    "description": "TileArea constructor.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "{@link TileArea#width}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "{@link TileArea#height}"
      },
      {
        "nullable": null,
        "types": [
          "Tile[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tiles",
        "description": "{@link TileArea#tiles}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "width",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#width",
    "access": null,
    "description": "The width of the tile area.",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 36,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "height",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#height",
    "access": null,
    "description": "The height of the tile area.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 37,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tiles",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#tiles",
    "access": null,
    "description": "The tiles in the tile area",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Tile[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTileIndex",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#getTileIndex",
    "access": null,
    "description": "Gets the index of a tile in the tile array from a position.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The index of the tile in the main array."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate of the tile."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate of the tile."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The index of the tile in the main array."
    },
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTileArea",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#getTileArea",
    "access": null,
    "description": "Gets an area of tiles.",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TileArea} A {@link TileArea} of the area requested."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate of the tile area."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate of the tile area."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The width of the tile area."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The height of the tile area."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TileArea"
      ],
      "spread": false,
      "description": "A {@link TileArea} of the area requested."
    },
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTilingTileData",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#getTilingTileData",
    "access": null,
    "description": "Gets tiling data from this TileArea.\n\nMost of the time when mapping tilemaps, having the pen be \"tiling\" is more\nuseful than having it overwrite everywhere. This function is meant to provide\nthat kind of functionallity.",
    "lineNumber": 92,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Tile} The calculated tile."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "originX",
        "description": "The x coordinate to tile from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "originY",
        "description": "The y coordinate to tile from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate to get data from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate to get data from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Tile"
      ],
      "spread": false,
      "description": "The calculated tile."
    },
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "insertTileArea",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#insertTileArea",
    "access": null,
    "description": "Inserts a TileArea into this TileArea.\n\nThis isertion does not fail if it goes outside of the TileArea.",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "Top left x coordinate of where the TileArea should be inserted."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "Top left y coordinate of where the TileArea should be inserted."
      },
      {
        "nullable": null,
        "types": [
          "TileArea"
        ],
        "spread": false,
        "optional": false,
        "name": "tileArea",
        "description": "The TileArea to be inserted."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "skipEmpty",
        "description": "If the insertion should skip empty (-1) tiles."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fillAt",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#fillAt",
    "access": null,
    "description": "Fills an area (think bucket tool in GIMP).",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "The x coordinate of where to fill from."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "The y coordinate of where to fill from."
      },
      {
        "nullable": null,
        "types": [
          "TileArea"
        ],
        "spread": false,
        "optional": false,
        "name": "tileArea",
        "description": "The TileAre to fill with (tiling)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resize",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#resize",
    "access": null,
    "description": "Resizes the TileArea, inserting empty tiles if grown and removing tiles if shrunk.\n\nKeep in mind that this function is currently really slow. It works, but it's just\nvery slow. Just ping me or send a PR if you need it to be faster. For now\nthough, don't call it every frame, but rather once you're certain you need\nto resize.",
    "lineNumber": 205,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The new width of the TileArea."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The new height of the TileArea."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tiles",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#tiles",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 45,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "width",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#width",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tiles",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#tiles",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "height",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#height",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "width",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#width",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "height",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#height",
    "access": null,
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_inRange",
    "memberof": "src/tilearea.js~TileArea",
    "longname": "src/tilearea.js~TileArea#_inRange",
    "access": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "params": [
      {
        "name": "x",
        "types": [
          "*"
        ]
      },
      {
        "name": "y",
        "types": [
          "*"
        ]
      },
      {
        "name": "width",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      },
      {
        "name": "height",
        "optional": true,
        "types": [
          "number"
        ],
        "defaultRaw": 1,
        "defaultValue": "1"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 51,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tilelayer.js",
    "memberof": null,
    "longname": "src/tilelayer.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { Tile } from \"./tile\";\nimport { TileArea } from \"./tilearea\";\nimport { PropertyObject } from \"./propertyObject\";\n\n/**\n * A tile layer object containing tiles and other properties.\n */\nexport class TileLayer extends TileArea {\n\t/**\n\t * TileLayer constructor.\n\t *\n\t * @param {TileMap} parentMap - The parent map for this layer.\n\t * @param {object} options - Options for the layer. Can also be layer data you loaded from JSON or similar.\n\t * @param {string} [options.name=\"Tilelayer\"] - {@link TileLayer#name}\n\t * @param {Tile[]} options.tiles=[] - {@link TileLayer#tiles}\n\t * @param {string[][]} [options.properties] - {@link PropertyObject#constructor}\n\t */\n\tconstructor(parentMap, options) {\n\t\tconst tiles = [];\n\t\tfor (let y = 0; y < parentMap.height; y++) {\n\t\t\tfor (let x = 0; x < parentMap.width; x++) {\n\t\t\t\tconst tile = new Tile(\n\t\t\t\t\toptions.tiles\n\t\t\t\t\t? options.tiles[x % parentMap.width + y * parentMap.width]\n\t\t\t\t\t: { tileId: -1, tilesetId: 0 }\n\t\t\t\t);\n\t\t\t\ttiles.push(tile);\n\t\t\t}\n\t\t}\n\n\t\tsuper(parentMap.width, parentMap.height, tiles);\n\n\t\t/** The name of the tile layer.\n\t\t * @type {string} */\n\t\tthis.name = options.name || \"Tilelayer\";\n\n\t\t/** Custom properties of the layer.\n\t\t * @type {PropertyObject} */\n\t\tthis.properties = new PropertyObject(options.properties);\n\n\t\t// Set up tile data change events\n\t\ttiles.forEach(tile => {\n\t\t\ttile.on(\"data-change\", this._tileDataChanged.bind(this));\n\t\t});\n\t}\n\n\t/**\n\t * Returns an object to be serialized by JSON.stringify.\n\t */\n\ttoJSON() {\n\t\tconst replacement = {};\n\t\tfor (let key in this) {\n\t\t\tif (key === \"width\" || key === \"height\") continue;\n\t\t\treplacement[key] = this[key];\n\t\t}\n\t\treturn replacement;\n\t}\n\n\t_tileDataChanged(e) {\n\t\tconst index = this.tiles.indexOf(e.tile);\n\t\tthis.emit(\"tile-change\", [index].concat(e.data));\n\t}\n}\n"
  },
  {
    "__docId__": 52,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TileLayer",
    "memberof": "src/tilelayer.js",
    "longname": "src/tilelayer.js~TileLayer",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/tilelayer.js",
    "importStyle": "{TileLayer}",
    "description": "A tile layer object containing tiles and other properties.",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/tilearea.js~TileArea"
    ]
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tilelayer.js~TileLayer",
    "longname": "src/tilelayer.js~TileLayer#constructor",
    "access": null,
    "description": "TileLayer constructor.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "TileMap"
        ],
        "spread": false,
        "optional": false,
        "name": "parentMap",
        "description": "The parent map for this layer."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the layer. Can also be layer data you loaded from JSON or similar."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"Tilelayer\"",
        "defaultRaw": "Tilelayer",
        "name": "options.name",
        "description": "{@link TileLayer#name}"
      },
      {
        "nullable": null,
        "types": [
          "Tile[]"
        ],
        "spread": false,
        "optional": false,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.tiles",
        "description": "{@link TileLayer#tiles}"
      },
      {
        "nullable": null,
        "types": [
          "string[][]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.properties",
        "description": "{@link PropertyObject#constructor}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 54,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/tilelayer.js~TileLayer",
    "longname": "src/tilelayer.js~TileLayer#name",
    "access": null,
    "description": "The name of the tile layer.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "properties",
    "memberof": "src/tilelayer.js~TileLayer",
    "longname": "src/tilelayer.js~TileLayer#properties",
    "access": null,
    "description": "Custom properties of the layer.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "src/tilelayer.js~TileLayer",
    "longname": "src/tilelayer.js~TileLayer#toJSON",
    "access": null,
    "description": "Returns an object to be serialized by JSON.stringify.",
    "lineNumber": 50,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 57,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_tileDataChanged",
    "memberof": "src/tilelayer.js~TileLayer",
    "longname": "src/tilelayer.js~TileLayer#_tileDataChanged",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 58,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tilemap.js",
    "memberof": null,
    "longname": "src/tilemap.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { TileLayer } from \"./tilelayer\";\nimport { TileSet } from \"./tileset\";\nimport { PropertyObject } from \"./propertyObject\";\n\n/**\n * A tilemap object with name, sizes and layers.\n */\nexport class TileMap {\n\t/**\n     * TileMap constructor.\n     *\n     * @param {object} options - Options for the tilemap. Can also be a tilemap you loaded from JSON or similar.\n\t * @param {string} [options.name=\"Tilemap\"] - {@link TileMap#name}\n     * @param {number} options.width - {@link TileMap#width}\n     * @param {number} options.height - {@link TileMap#height}\n     * @param {number} options.tileWidth - {@link TileMap#tileWidth}\n     * @param {number} options.tileHeight - {@link TileMap#tileHeight}\n     * @param {layerOption[]} [options.layers=[]] - Same structure as options in {@link TileLayer#constructor}\n     * @param {tilesetOption[]} [options.tilesets=[]] - Same structure as options in {@link TileSet#constructor}\n\t * @param {string[][]} [options.properties] - {@link PropertyObject#constructor}\n     */\n\tconstructor(options) {\n\t\t/** The name of the tilemap.\n\t\t * @type {string} */\n\t\tthis.name = options.name || \"Tilemap\";\n\n\t\tthis._width = options.width;\n\t\tthis._height = options.height;\n\n\t\t/** The width of a tile for the tilemap.\n\t\t * @type {number} */\n\t\tthis.tileWidth = options.tileWidth;\n\t\t/** The height of a tile for the tilemap.\n\t\t * @type {number} */\n\t\tthis.tileHeight = options.tileHeight;\n\n\t\t/** All layers of the tilemap\n\t\t *  @type {TileLayer[]} */\n\t\tthis.layers = [];\n\t\toptions.layers = options.layers || [];\n\t\tfor (let layerData of options.layers) {\n\t\t\tthis.createLayer(layerData);\n\t\t}\n\n\t\t/** The tilesets the tilemap consists of.\n\t\t * @type {TileSet[]} */\n\t\tthis.tilesets = [];\n\t\toptions.tilesets = options.tilesets || [];\n\t\tfor (let tileset of options.tilesets) {\n\t\t\tthis.addTileset(new TileSet(tileset));\n\t\t}\n\n\t\t/** Custom properties of the tilemap.\n\t\t * @type {PropertyObject} */\n\t\tthis.properties = new PropertyObject(options.properties);\n\n\t\tthis._dataBuffer = [];\n\t}\n\n\t/** The width of the tilemap.\n\t * @type {number} */\n\tget width() {\n\t\treturn this._width;\n\t}\n\t/** The height of the tilemap.\n\t * @type {number} */\n\tget height() {\n\t\treturn this._height;\n\t}\n\n\t/**\n\t * Resizes the TileMap, inserting empty tiles if grown and removing tiles if shrunk.\n\t *\n\t * PLEASE NOTE: As explained {@link TileArea#resize}, this function is slow\n\t * on just one TileArea (layer), so you can imagine what'll happen if you call\n\t * this on just 4 150x150 layers...\n\t *\n\t * @param {number} width - The new width of the map.\n\t * @param {number} height - The new height of the map.\n\t */\n\tresize(width, height) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tfor (let layer of this.layers) {\n\t\t\tlayer.resize(this._width, this._height);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new layer and adds it to the tilemap.\n\t *\n\t * @param {object} options - Options for the layer (see {@link TileLayer}).\n\t *\n\t * @returns {TileLayer}\n\t */\n\tcreateLayer(options) {\n\t\tconst layer = new TileLayer(this, options);\n\n\t\tconst layerIndex = this.layers.length;\n\t\tlayer.on(\"tile-change\", data => {\n\t\t\tthis._dataBuffer.push([layerIndex].concat(data));\n\t\t});\n\n\t\tthis.layers.push(layer);\n\t\treturn layer;\n\t}\n\n\t/**\n\t * Adds a tileset to the tilemap.\n\t *\n\t * @param {TileSet} tileset - the tileset to add to the map.\n\t *\n\t * @returns {TileSet}\n\t */\n\taddTileset(tileset) {\n\t\tthis.tilesets.push(tileset);\n\t\treturn tileset;\n\t}\n\n\t/**\n\t * Empties the data buffer. This is supposed to be used with undo/redo\n\t * functionality.\n\t *\n\t * @returns The emptied data buffer as an Array. [layerId, tileId, [previousId, previousTilesetId], [newId, newTilesetId]]\n\t */\n\ttakeDataBuffer() {\n\t\tconst toReturn = [].concat(this._dataBuffer);\n\t\tthis._dataBuffer = [];\n\t\treturn toReturn;\n\t}\n\n\t/**\n\t * Converts this tilemap to a JSON string.\n\t *\n\t * @returns {string} - The JSON serialization of this tilemap.\n\t */\n\tgetJSON() {\n\t\treturn JSON.stringify(this, (key, value) => {\n\t\t\t// Since width and height are getters, they don't get serialized.\n\t\t\t// Therefore, what is done here is that we check each property for\n\t\t\t// if it's a TileMap and if it is, we replace the _width and _height\n\t\t\t// property names with width and height (by substringing).\n\t\t\tif (value instanceof TileMap) {\n\t\t\t\tconst replacement = {};\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tconst oldValue = value[k];\n\t\t\t\t\tif (k === \"_width\" || k === \"_height\") {\n\t\t\t\t\t\tk = k.substring(1);\n\t\t\t\t\t}\n\t\t\t\t\treplacement[k] = oldValue;\n\t\t\t\t}\n\t\t\t\treturn replacement;\n\t\t\t}\n\t\t\tif (key.indexOf(\"_\") === 0) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\treturn value;\n\t\t});\n\t}\n}\n"
  },
  {
    "__docId__": 59,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TileMap",
    "memberof": "src/tilemap.js",
    "longname": "src/tilemap.js~TileMap",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/tilemap.js",
    "importStyle": "{TileMap}",
    "description": "A tilemap object with name, sizes and layers.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#constructor",
    "access": null,
    "description": "TileMap constructor.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the tilemap. Can also be a tilemap you loaded from JSON or similar."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"Tilemap\"",
        "defaultRaw": "Tilemap",
        "name": "options.name",
        "description": "{@link TileMap#name}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.width",
        "description": "{@link TileMap#width}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.height",
        "description": "{@link TileMap#height}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.tileWidth",
        "description": "{@link TileMap#tileWidth}"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.tileHeight",
        "description": "{@link TileMap#tileHeight}"
      },
      {
        "nullable": null,
        "types": [
          "layerOption[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.layers",
        "description": "Same structure as options in {@link TileLayer#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "tilesetOption[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.tilesets",
        "description": "Same structure as options in {@link TileSet#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "string[][]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.properties",
        "description": "{@link PropertyObject#constructor}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 61,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#name",
    "access": null,
    "description": "The name of the tilemap.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_width",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_width",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_height",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_height",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileWidth",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#tileWidth",
    "access": null,
    "description": "The width of a tile for the tilemap.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tileHeight",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#tileHeight",
    "access": null,
    "description": "The height of a tile for the tilemap.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "layers",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#layers",
    "access": null,
    "description": "All layers of the tilemap",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "TileLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tilesets",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#tilesets",
    "access": null,
    "description": "The tilesets the tilemap consists of.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "TileSet[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "properties",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#properties",
    "access": null,
    "description": "Custom properties of the tilemap.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataBuffer",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_dataBuffer",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "width",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#width",
    "access": null,
    "description": "The width of the tilemap.",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "get",
    "static": false,
    "variation": null,
    "name": "height",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#height",
    "access": null,
    "description": "The height of the tilemap.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "generator": false
  },
  {
    "__docId__": 72,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resize",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#resize",
    "access": null,
    "description": "Resizes the TileMap, inserting empty tiles if grown and removing tiles if shrunk.\n\nPLEASE NOTE: As explained {@link TileArea#resize}, this function is slow\non just one TileArea (layer), so you can imagine what'll happen if you call\nthis on just 4 150x150 layers...",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "The new width of the map."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "The new height of the map."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 73,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_width",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_width",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_height",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_height",
    "access": null,
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createLayer",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#createLayer",
    "access": null,
    "description": "Creates a new layer and adds it to the tilemap.",
    "lineNumber": 97,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TileLayer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the layer (see {@link TileLayer})."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TileLayer"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 76,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addTileset",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#addTileset",
    "access": null,
    "description": "Adds a tileset to the tilemap.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TileSet}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TileSet"
        ],
        "spread": false,
        "optional": false,
        "name": "tileset",
        "description": "the tileset to add to the map."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TileSet"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "__docId__": 77,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "takeDataBuffer",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#takeDataBuffer",
    "access": null,
    "description": "Empties the data buffer. This is supposed to be used with undo/redo\nfunctionality.",
    "lineNumber": 127,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "The emptied data buffer as an Array. [layerId, tileId, [previousId, previousTilesetId], [newId, newTilesetId]]"
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "The emptied data buffer as an Array. [layerId, tileId, [previousId, previousTilesetId], [newId, newTilesetId]]"
    },
    "generator": false
  },
  {
    "__docId__": 78,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_dataBuffer",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#_dataBuffer",
    "access": null,
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getJSON",
    "memberof": "src/tilemap.js~TileMap",
    "longname": "src/tilemap.js~TileMap#getJSON",
    "access": null,
    "description": "Converts this tilemap to a JSON string.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} - The JSON serialization of this tilemap."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The JSON serialization of this tilemap."
    },
    "generator": false
  },
  {
    "__docId__": 80,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/tileset.js",
    "memberof": null,
    "longname": "src/tileset.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { PropertyObject } from \"./propertyObject\";\n\n/**\n * A tileset object for storing arbitrary information about tilesets.\n */\nexport class TileSet {\n\t/**\n\t * TileSet constructor.\n\t *\n\t * @param {object} options - The options for the tileset.\n\t * @param {string} [options.name=\"Tileset\"] - {@link TileSet#name}\n\t * @param {string} [options.type=\"test\"] - {@link TileSet#type}\n\t * @param {string} [options.path] - {@link TileSet#path}\n\t * @param {string[][]} [options.properties] - {@link PropertyObject#constructor}\n\t * @param {object} [options.tileProperties={}] - Default tile properties for the tileset.\n\t */\n\tconstructor({\n\t\tname = \"Tileset\",\n\t\ttype = \"test\",\n\t\tpath,\n\t\tvirtualPath,\n\t\tproperties,\n\t\ttileProperties = {}\n\t}) {\n\t\t/** The name of the tileset.\n\t\t * @type {string} */\n\t\tthis.name = name;\n\t\t/** The type of the tileset.\n\t\t * Possible values are: \"test\", \"image\"\n\t\t * @type {string} */\n\t\tthis.type = type;\n\t\t/** The path of the tileset.\n\t\t * This should only be used if tileset type is set to \"image\".\n\t\t * @type {string} */\n\t\tthis.path = path;\n\t\t/** The virtual path of the tileset.\n\t\t * To be used by editors, such as DTile. Defaults to the noraml path if\n\t\t * undefined.\n\t\t * @type {string} */\n\t\tthis.virtualPath = virtualPath || path;\n\n\t\t/** Custom properties of the tilemap.\n\t\t * @type {PropertyObject} */\n\t\tthis.properties = new PropertyObject(properties);\n\n\t\tthis._tileProperties = {};\n\t\tfor (let key of Object.keys(tileProperties)) {\n\t\t\tkey = parseInt(key);\n\t\t\tif (isNaN(key)) {\n\t\t\t\tthrow new TypeError(\"Tile property keys have to be numbers\");\n\t\t\t}\n\t\t\tconst value = tileProperties[key];\n\t\t\tthis._tileProperties[key] = new PropertyObject(value);\n\t\t}\n\t}\n\n\t/**\n\t * Gets a PropertyObject for a tile ID on the TileSet.\n\t *\n\t * @param {number} id - The tileID to get the PropertyObject for.\n\t *\n\t * @returns {PropertyObject} The PropertyObject beloning to this tile ID.\n\t *\n\t * @throws {TypeError} Throws a TypeError if id isn't a number.\n\t * @throws {RangeError} Throws a RangeError if there isn't a PropertyObject for the ID.\n\t */\n\tgetTileProperties(id) {\n\t\tif (typeof id !== \"number\") {\n\t\t\tthrow new TypeError(\"ID has to be a number\");\n\t\t}\n\t\tif (!this.hasTileProperties(id)) {\n\t\t\tthrow new RangeError(\"There are no properties for tile ID \" + id);\n\t\t}\n\n\t\treturn this._tileProperties[id];\n\t}\n\n\t/**\n\t * Creates a PropertyObject if needed and returns it.\n\t *\n\t * @param {number} id - The tileID to create the PropertyObject for.\n\t *\n\t * @returns {?PropertyObject} The created PropertyObject or undefined if it already existed.\n\t *\n\t * @throws {TypeError} Throws a TypeError if id isn't a number.\n\t */\n\tcreateTileProperties(id) {\n\t\tif (typeof id !== \"number\") {\n\t\t\tthrow new TypeError(\"ID has to be a number\");\n\t\t}\n\t\tif (!this.hasTileProperties(id)) {\n\t\t\tthis._tileProperties[id] = new PropertyObject();\n\t\t\treturn this._tileProperties[id];\n\t\t}\n\t}\n\n\t/**\n\t * Checks if a PropertyObject exists for an ID.\n\t *\n\t * @param {number} id - The tileID to check for a PropertyObject.\n\t *\n\t * @returns {boolean}\n\t *\n\t * @throws {TypeError} Throws a TypeError if id isn't a number.\n\t */\n\thasTileProperties(id) {\n\t\tif (typeof id !== \"number\") {\n\t\t\tthrow new TypeError(\"ID has to be a number\");\n\t\t}\n\t\treturn typeof this._tileProperties[id] !== \"undefined\";\n\t}\n}\n"
  },
  {
    "__docId__": 81,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "TileSet",
    "memberof": "src/tileset.js",
    "longname": "src/tileset.js~TileSet",
    "access": null,
    "export": true,
    "importPath": "dtile-tilemap/src/tileset.js",
    "importStyle": "{TileSet}",
    "description": "A tileset object for storing arbitrary information about tilesets.",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 82,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#constructor",
    "access": null,
    "description": "TileSet constructor.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options for the tileset."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"Tileset\"",
        "defaultRaw": "Tileset",
        "name": "options.name",
        "description": "{@link TileSet#name}"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"test\"",
        "defaultRaw": "test",
        "name": "options.type",
        "description": "{@link TileSet#type}"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.path",
        "description": "{@link TileSet#path}"
      },
      {
        "nullable": null,
        "types": [
          "string[][]"
        ],
        "spread": false,
        "optional": true,
        "name": "options.properties",
        "description": "{@link PropertyObject#constructor}"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.tileProperties",
        "description": "Default tile properties for the tileset."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#name",
    "access": null,
    "description": "The name of the tileset.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "type",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#type",
    "access": null,
    "description": "The type of the tileset.\nPossible values are: \"test\", \"image\"",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "path",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#path",
    "access": null,
    "description": "The path of the tileset.\nThis should only be used if tileset type is set to \"image\".",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "virtualPath",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#virtualPath",
    "access": null,
    "description": "The virtual path of the tileset.\nTo be used by editors, such as DTile. Defaults to the noraml path if\nundefined.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "properties",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#properties",
    "access": null,
    "description": "Custom properties of the tilemap.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_tileProperties",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#_tileProperties",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getTileProperties",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#getTileProperties",
    "access": null,
    "description": "Gets a PropertyObject for a tile ID on the TileSet.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PropertyObject} The PropertyObject beloning to this tile ID."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The tileID to get the PropertyObject for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": "The PropertyObject beloning to this tile ID."
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Throws a TypeError if id isn't a number."
      },
      {
        "types": [
          "RangeError"
        ],
        "description": "Throws a RangeError if there isn't a PropertyObject for the ID."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createTileProperties",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#createTileProperties",
    "access": null,
    "description": "Creates a PropertyObject if needed and returns it.",
    "lineNumber": 87,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?PropertyObject} The created PropertyObject or undefined if it already existed."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The tileID to create the PropertyObject for."
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "PropertyObject"
      ],
      "spread": false,
      "description": "The created PropertyObject or undefined if it already existed."
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Throws a TypeError if id isn't a number."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 91,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasTileProperties",
    "memberof": "src/tileset.js~TileSet",
    "longname": "src/tileset.js~TileSet#hasTileProperties",
    "access": null,
    "description": "Checks if a PropertyObject exists for an ID.",
    "lineNumber": 106,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The tileID to check for a PropertyObject."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": "Throws a TypeError if id isn't a number."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 93,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/event.js",
    "memberof": null,
    "longname": "test/event.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should as chaiShould } from \"chai\";\n\nimport { EventEmitter } from \"../src/event\";\n\nchaiShould();\n\n/** @test {EventEmitter} */\ndescribe(\"EventEmitter\", () => {\n\tlet ee = new EventEmitter();\n\n\tdescribe(\"on\", () => {\n\t\tit(\"adds an event listener\", () => {\n\t\t\tee.on(\"event\", () => {});\n\t\t\tee._listeners.length.should.equal(1);\n\t\t});\n\t\tit(\"doesn't accept anything but strings as event names\", () => {\n\t\t\t(() => {\n\t\t\t\tee.on(() => {});\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t\tit(\"doesn't accept anything but functions as listeners\", () => {\n\t\t\t(() => {\n\t\t\t\tee.on(\"event\", \"not a function\");\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\tdescribe(\"off\", () => {\n\t\tit(\"removes an event listener\", () => {\n\t\t\tconst listener = () => {};\n\t\t\tee.on(\"event\", listener);\n\t\t\tee.off(\"event\", listener);\n\t\t\tee._listeners.length.should.equal(1);\n\t\t});\n\t});\n\tdescribe(\"emit\", () => {\n\t\tit(\"fires an event with arguements properly\", done => {\n\t\t\tee.on(\"event\", e => {\n\t\t\t\te.value.should.equal(456);\n\t\t\t\te.something.should.equal(\"hi\");\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tee.emit(\"event\", { value: 456, something: \"hi\" });\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 150,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "test/event.js",
    "testDepth": 0,
    "longname": "test/event.js~describe0",
    "access": null,
    "description": "EventEmitter",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{EventEmitter}"
      }
    ],
    "testTargets": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 151,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "test/event.js~describe0",
    "testDepth": 1,
    "longname": "test/event.js~describe0.describe1",
    "access": null,
    "description": "on",
    "lineNumber": 11
  },
  {
    "__docId__": 152,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "test/event.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/event.js~describe0.describe1.it2",
    "access": null,
    "description": "adds an event listener",
    "lineNumber": 12
  },
  {
    "__docId__": 153,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it3",
    "testId": 3,
    "memberof": "test/event.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/event.js~describe0.describe1.it3",
    "access": null,
    "description": "doesn't accept anything but strings as event names",
    "lineNumber": 16
  },
  {
    "__docId__": 154,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "test/event.js~describe0.describe1",
    "testDepth": 2,
    "longname": "test/event.js~describe0.describe1.it4",
    "access": null,
    "description": "doesn't accept anything but functions as listeners",
    "lineNumber": 21
  },
  {
    "__docId__": 155,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe5",
    "testId": 5,
    "memberof": "test/event.js~describe0",
    "testDepth": 1,
    "longname": "test/event.js~describe0.describe5",
    "access": null,
    "description": "off",
    "lineNumber": 27
  },
  {
    "__docId__": 156,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it6",
    "testId": 6,
    "memberof": "test/event.js~describe0.describe5",
    "testDepth": 2,
    "longname": "test/event.js~describe0.describe5.it6",
    "access": null,
    "description": "removes an event listener",
    "lineNumber": 28
  },
  {
    "__docId__": 157,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe7",
    "testId": 7,
    "memberof": "test/event.js~describe0",
    "testDepth": 1,
    "longname": "test/event.js~describe0.describe7",
    "access": null,
    "description": "emit",
    "lineNumber": 35
  },
  {
    "__docId__": 158,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "test/event.js~describe0.describe7",
    "testDepth": 2,
    "longname": "test/event.js~describe0.describe7.it8",
    "access": null,
    "description": "fires an event with arguements properly",
    "lineNumber": 36
  },
  {
    "__docId__": 159,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/propertyObject.js",
    "memberof": null,
    "longname": "test/propertyObject.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should as chaiShould } from \"chai\";\n\nimport { PropertyObject } from \"../src/propertyObject\";\n\nchaiShould();\n\n/** @test {PropertyObject} */\ndescribe(\"PropertyObject\", () => {\n\tconst defaultProperties = [[\"test1\", true], [\"test2\", 159]];\n\tlet properties;\n\n\tbeforeEach(() => {\n\t\tproperties = new PropertyObject(defaultProperties);\n\t});\n\n\t/** @test {PropertyObject#constructor} */\n\tdescribe(\"#constructor\", () => {\n\t\tit(\"creates width some default values\", () => {\n\t\t\tproperties._map.get(\"test1\").should.equal(true);\n\t\t\tproperties._map.get(\"test2\").should.equal(159);\n\t\t});\n\t\tit(\"creates from another property object\", () => {\n\t\t\tconst newProperties = new PropertyObject(properties);\n\t\t\tnewProperties.should.deep.equal(properties);\n\t\t});\n\t\tit(\"crashes when passed in an invalid properties object\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew PropertyObject(() => {});\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t\tit(\"rejects invalid value types\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew PropertyObject({ test: () => {} });\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {PropertyObject#get} */\n\tdescribe(\"#get\", () => {\n\t\tit(\"gets basic values correctly\", () => {\n\t\t\tproperties.get(\"test1\").should.equal(true);\n\t\t\tproperties.get(\"test2\").should.equal(159);\n\t\t});\n\t\tit(\"crashes when key is not a string\", () => {\n\t\t\t(() => {\n\t\t\t\tproperties.get(() => {});\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {PropertyObject#getAll} */\n\tdescribe(\"#getAll\", () => {\n\t\tit(\"gets all values correctly\", () => {\n\t\t\tconst values = properties.getAll();\n\t\t\tfor (let [key, value] of values) {\n\t\t\t\tlet found = false;\n\t\t\t\tfor (let [pkey, pvalue] of defaultProperties) {\n\t\t\t\t\tif (key === pkey) {\n\t\t\t\t\t\tvalue.should.equal(pvalue);\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfound.should.be.true;\n\t\t\t}\n\t\t});\n\t});\n\n\t/** @test {PropertyObject#set} */\n\tdescribe(\"#set\", () => {\n\t\tit(\"sets a key correctly\", () => {\n\t\t\tproperties.set(\"test3\", \"hello\");\n\t\t\tproperties.get(\"test3\").should.equal(\"hello\");\n\t\t});\n\t\tit(\"rejects keys of invalid types\", () => {\n\t\t\t(() => {\n\t\t\t\tproperties.set(() => {}, \"invalid\");\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t\tit(\"rejects values of invalid types\", () => {\n\t\t\t// Should only accept valid JSON types.\n\t\t\t(() => {\n\t\t\t\tproperties.set(\"test3\", () => {});\n\t\t\t}).should.throw(TypeError);\n\t\t\t(() => {\n\t\t\t\tproperties.set(\"test3\", \"hello\");\n\t\t\t\tproperties.set(\"test4\", 123);\n\t\t\t\tproperties.set(\"test5\", true);\n\t\t\t\tproperties.set(\"test6\", { anObject: \"with a value\" });\n\t\t\t}).should.not.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {PropertyObject#toJSON} */\n\tdescribe(\"#toJSON\", () => {\n\t\tit(\"serializes correctly\", () => {\n\t\t\tJSON.stringify(properties).should.equal(\"[[\\\"test1\\\",true],[\\\"test2\\\",159]]\");\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 160,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe9",
    "testId": 9,
    "memberof": "test/propertyObject.js",
    "testDepth": 0,
    "longname": "test/propertyObject.js~describe9",
    "access": null,
    "description": "PropertyObject",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject}"
      }
    ],
    "testTargets": [
      "PropertyObject"
    ]
  },
  {
    "__docId__": 161,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe10",
    "testId": 10,
    "memberof": "test/propertyObject.js~describe9",
    "testDepth": 1,
    "longname": "test/propertyObject.js~describe9.describe10",
    "access": null,
    "description": "#constructor",
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject#constructor}"
      }
    ],
    "testTargets": [
      "PropertyObject#constructor"
    ]
  },
  {
    "__docId__": 162,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it11",
    "testId": 11,
    "memberof": "test/propertyObject.js~describe9.describe10",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe10.it11",
    "access": null,
    "description": "creates width some default values",
    "lineNumber": 18
  },
  {
    "__docId__": 163,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "test/propertyObject.js~describe9.describe10",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe10.it12",
    "access": null,
    "description": "creates from another property object",
    "lineNumber": 22
  },
  {
    "__docId__": 164,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it13",
    "testId": 13,
    "memberof": "test/propertyObject.js~describe9.describe10",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe10.it13",
    "access": null,
    "description": "crashes when passed in an invalid properties object",
    "lineNumber": 26
  },
  {
    "__docId__": 165,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it14",
    "testId": 14,
    "memberof": "test/propertyObject.js~describe9.describe10",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe10.it14",
    "access": null,
    "description": "rejects invalid value types",
    "lineNumber": 32
  },
  {
    "__docId__": 166,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe15",
    "testId": 15,
    "memberof": "test/propertyObject.js~describe9",
    "testDepth": 1,
    "longname": "test/propertyObject.js~describe9.describe15",
    "access": null,
    "description": "#get",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject#get}"
      }
    ],
    "testTargets": [
      "PropertyObject#get"
    ]
  },
  {
    "__docId__": 167,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "test/propertyObject.js~describe9.describe15",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe15.it16",
    "access": null,
    "description": "gets basic values correctly",
    "lineNumber": 42
  },
  {
    "__docId__": 168,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it17",
    "testId": 17,
    "memberof": "test/propertyObject.js~describe9.describe15",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe15.it17",
    "access": null,
    "description": "crashes when key is not a string",
    "lineNumber": 46
  },
  {
    "__docId__": 169,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe18",
    "testId": 18,
    "memberof": "test/propertyObject.js~describe9",
    "testDepth": 1,
    "longname": "test/propertyObject.js~describe9.describe18",
    "access": null,
    "description": "#getAll",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject#getAll}"
      }
    ],
    "testTargets": [
      "PropertyObject#getAll"
    ]
  },
  {
    "__docId__": 170,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "test/propertyObject.js~describe9.describe18",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe18.it19",
    "access": null,
    "description": "gets all values correctly",
    "lineNumber": 55
  },
  {
    "__docId__": 171,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe20",
    "testId": 20,
    "memberof": "test/propertyObject.js~describe9",
    "testDepth": 1,
    "longname": "test/propertyObject.js~describe9.describe20",
    "access": null,
    "description": "#set",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject#set}"
      }
    ],
    "testTargets": [
      "PropertyObject#set"
    ]
  },
  {
    "__docId__": 172,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it21",
    "testId": 21,
    "memberof": "test/propertyObject.js~describe9.describe20",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe20.it21",
    "access": null,
    "description": "sets a key correctly",
    "lineNumber": 72
  },
  {
    "__docId__": 173,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "test/propertyObject.js~describe9.describe20",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe20.it22",
    "access": null,
    "description": "rejects keys of invalid types",
    "lineNumber": 76
  },
  {
    "__docId__": 174,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it23",
    "testId": 23,
    "memberof": "test/propertyObject.js~describe9.describe20",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe20.it23",
    "access": null,
    "description": "rejects values of invalid types",
    "lineNumber": 81
  },
  {
    "__docId__": 175,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe24",
    "testId": 24,
    "memberof": "test/propertyObject.js~describe9",
    "testDepth": 1,
    "longname": "test/propertyObject.js~describe9.describe24",
    "access": null,
    "description": "#toJSON",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PropertyObject#toJSON}"
      }
    ],
    "testTargets": [
      "PropertyObject#toJSON"
    ]
  },
  {
    "__docId__": 176,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it25",
    "testId": 25,
    "memberof": "test/propertyObject.js~describe9.describe24",
    "testDepth": 2,
    "longname": "test/propertyObject.js~describe9.describe24.it25",
    "access": null,
    "description": "serializes correctly",
    "lineNumber": 97
  },
  {
    "__docId__": 177,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tile.js",
    "memberof": null,
    "longname": "test/tile.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should } from \"chai\";\n\nimport { Tile } from \"../src\";\n\nshould();\n\n/** @test {Tile} */\ndescribe(\"Tile\", () => {\n\t/** @test {Tile#constructor} */\n\tdescribe(\"#constructor\", () => {\n\t\tit(\"creates from objects\", () => {\n\t\t\tlet tile = new Tile({\n\t\t\t\ttileId: 56,\n\t\t\t\ttilesetId: 1\n\t\t\t});\n\t\t\ttile.tileId.should.equal(56);\n\t\t\ttile.tilesetId.should.equal(1);\n\t\t});\n\t\tit(\"creates from strings\", () => {\n\t\t\tlet tile = new Tile(\"224:5\");\n\t\t\ttile.tileId.should.equal(224);\n\t\t\ttile.tilesetId.should.equal(5);\n\t\t});\n\t\tit(\"has empty default values\", () => {\n\t\t\tconst tile = new Tile();\n\t\t\ttile.tilesetId.should.equal(-1);\n\t\t\ttile.tilesetId.should.equal(-1);\n\t\t});\n\t});\n\n\t/** @test {Tile#setTile} */\n\tdescribe(\"#setTile\", () => {\n\t\tlet tile;\n\t\tbeforeEach(() => {\n\t\t\ttile = new Tile(\"10:8\");\n\t\t});\n\n\t\tit(\"can replace only tile ID\", () => {\n\t\t\ttile.setData(15);\n\t\t\ttile.tileId.should.equal(15);\n\t\t\ttile.tilesetId.should.equal(8);\n\t\t});\n\t\tit(\"can replace both tile ID and tileset ID\", () => {\n\t\t\ttile.setData(84, 2);\n\t\t\ttile.tileId.should.equal(84);\n\t\t\ttile.tilesetId.should.equal(2);\n\t\t});\n\t\tit(\"doesn't replace if ID is -1\", () => {\n\t\t\ttile.setData(-1, -1);\n\t\t\ttile.tileId.should.equal(10);\n\t\t\ttile.tilesetId.should.equal(8);\n\t\t});\n\t\tit(\"does replace empty if told so\", () => {\n\t\t\ttile.setData(-1, -1, true);\n\t\t\ttile.tileId.should.equal(-1);\n\t\t\ttile.tilesetId.should.equal(-1);\n\t\t});\n\t});\n\n\t/** @test {Tile#toJSON} */\n\tdescribe(\"#toJSON\", () => {\n\t\tit(\"stringifies with properties\", () => {\n\t\t\tlet tile = new Tile({\n\t\t\t\ttileId: 14,\n\t\t\t\ttilesetId: 3,\n\t\t\t\tproperties: [\n\t\t\t\t\t[\"property\", \"is a string\"]\n\t\t\t\t]\n\t\t\t});\n\t\t\tJSON.stringify(tile).should.contain(\"[\\\"property\\\",\\\"is a string\\\"]\");\n\t\t});\n\t\tit(\"stringifies without properties\", () => {\n\t\t\tlet tile = new Tile(\"456:3\");\n\t\t\tJSON.stringify(tile).should.equal(\"\\\"456:3\\\"\");\n\t\t});\n\t});\n\n\t/** @test {Tile#clone} */\n\tdescribe(\"#clone\", () => {\n\t\tlet tile;\n\t\tbeforeEach(() => {\n\t\t\ttile = new Tile({\n\t\t\t\ttileId: 14,\n\t\t\t\ttilesetId: 3,\n\t\t\t\tproperties: [\n\t\t\t\t\t[\"property\", \"is a string\"]\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\n\t\tit(\"clones all the properties of a tile\", () => {\n\t\t\ttile.clone().should.deep.equal(tile);\n\t\t});\n\t\tit(\"doesn't become the same tile\", () => {\n\t\t\ttile.clone().should.not.equal(tile);\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 178,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe26",
    "testId": 26,
    "memberof": "test/tile.js",
    "testDepth": 0,
    "longname": "test/tile.js~describe26",
    "access": null,
    "description": "Tile",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Tile}"
      }
    ],
    "testTargets": [
      "Tile"
    ]
  },
  {
    "__docId__": 179,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe27",
    "testId": 27,
    "memberof": "test/tile.js~describe26",
    "testDepth": 1,
    "longname": "test/tile.js~describe26.describe27",
    "access": null,
    "description": "#constructor",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Tile#constructor}"
      }
    ],
    "testTargets": [
      "Tile#constructor"
    ]
  },
  {
    "__docId__": 180,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it28",
    "testId": 28,
    "memberof": "test/tile.js~describe26.describe27",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe27.it28",
    "access": null,
    "description": "creates from objects",
    "lineNumber": 11
  },
  {
    "__docId__": 181,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "test/tile.js~describe26.describe27",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe27.it29",
    "access": null,
    "description": "creates from strings",
    "lineNumber": 19
  },
  {
    "__docId__": 182,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "test/tile.js~describe26.describe27",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe27.it30",
    "access": null,
    "description": "has empty default values",
    "lineNumber": 24
  },
  {
    "__docId__": 183,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe31",
    "testId": 31,
    "memberof": "test/tile.js~describe26",
    "testDepth": 1,
    "longname": "test/tile.js~describe26.describe31",
    "access": null,
    "description": "#setTile",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Tile#setTile}"
      }
    ],
    "testTargets": [
      "Tile#setTile"
    ]
  },
  {
    "__docId__": 184,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it32",
    "testId": 32,
    "memberof": "test/tile.js~describe26.describe31",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe31.it32",
    "access": null,
    "description": "can replace only tile ID",
    "lineNumber": 38
  },
  {
    "__docId__": 185,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "test/tile.js~describe26.describe31",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe31.it33",
    "access": null,
    "description": "can replace both tile ID and tileset ID",
    "lineNumber": 43
  },
  {
    "__docId__": 186,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "test/tile.js~describe26.describe31",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe31.it34",
    "access": null,
    "description": "doesn't replace if ID is -1",
    "lineNumber": 48
  },
  {
    "__docId__": 187,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it35",
    "testId": 35,
    "memberof": "test/tile.js~describe26.describe31",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe31.it35",
    "access": null,
    "description": "does replace empty if told so",
    "lineNumber": 53
  },
  {
    "__docId__": 188,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe36",
    "testId": 36,
    "memberof": "test/tile.js~describe26",
    "testDepth": 1,
    "longname": "test/tile.js~describe26.describe36",
    "access": null,
    "description": "#toJSON",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Tile#toJSON}"
      }
    ],
    "testTargets": [
      "Tile#toJSON"
    ]
  },
  {
    "__docId__": 189,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it37",
    "testId": 37,
    "memberof": "test/tile.js~describe26.describe36",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe36.it37",
    "access": null,
    "description": "stringifies with properties",
    "lineNumber": 62
  },
  {
    "__docId__": 190,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "test/tile.js~describe26.describe36",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe36.it38",
    "access": null,
    "description": "stringifies without properties",
    "lineNumber": 72
  },
  {
    "__docId__": 191,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe39",
    "testId": 39,
    "memberof": "test/tile.js~describe26",
    "testDepth": 1,
    "longname": "test/tile.js~describe26.describe39",
    "access": null,
    "description": "#clone",
    "lineNumber": 79,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Tile#clone}"
      }
    ],
    "testTargets": [
      "Tile#clone"
    ]
  },
  {
    "__docId__": 192,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "test/tile.js~describe26.describe39",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe39.it40",
    "access": null,
    "description": "clones all the properties of a tile",
    "lineNumber": 91
  },
  {
    "__docId__": 193,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it41",
    "testId": 41,
    "memberof": "test/tile.js~describe26.describe39",
    "testDepth": 2,
    "longname": "test/tile.js~describe26.describe39.it41",
    "access": null,
    "description": "doesn't become the same tile",
    "lineNumber": 94
  },
  {
    "__docId__": 194,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tilearea.js",
    "memberof": null,
    "longname": "test/tilearea.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should } from \"chai\";\n\nimport { TileArea, Tile } from \"../src\";\n\nshould();\n\n/** @test {TileArea} */\ndescribe(\"TileArea\", () => {\n\tconst areaWidth = 30, areaHeight = 30;\n\tlet tileArea, tiles;\n\n\tbeforeEach(() => {\n\t\ttiles = [];\n\t\tfor (let i = 0; i < areaWidth * areaHeight; i++) {\n\t\t\ttiles.push(new Tile({\n\t\t\t\ttileId: parseInt(Math.random() * 100)\n\t\t\t}));\n\t\t}\n\n\t\ttileArea = new TileArea(areaWidth, areaHeight, tiles);\n\t});\n\n\t/** @test {TileArea#constructor} */\n\tdescribe(\"#constructor\", () => {\n\t\tit(\"rejects non-tile objects\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew TileArea(1, 1, [{ tileId: 0 }]);\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\n\t\tit(\"requires width and height to equal amount of tiles\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew TileArea(0, 0, [new Tile({ tileId: 0 })]);\n\t\t\t}).should.throw(RangeError);\n\t\t});\n\t});\n\n\t/** @test {TileArea#getTileIndex} */\n\tdescribe(\"#getTileIndex\", () => {\n\t\tit(\"returns the right index\", () => {\n\t\t\ttileArea.getTileIndex(16, 20).should.equal(616);\n\t\t\ttileArea.getTileIndex(5, 26).should.equal(785);\n\t\t});\n\t\tit(\"crashes if out of bounds\", () => {\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileIndex(areaWidth, 0);\n\t\t\t}).should.throw(RangeError);\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileIndex(-1, 0);\n\t\t\t}).should.throw(RangeError);\n\t\t});\n\t});\n\n\t/** @test {TileArea#getTileArea} */\n\tdescribe(\"#getTileArea\", () => {\n\t\tit(\"returns the correct tiles\", () => {\n\t\t\tconst tileAreaSplice = tileArea.getTileArea(0, 0, 2, 2);\n\t\t\tfor (let x = 0; x < tileAreaSplice.width; x++) {\n\t\t\t\tfor (let y = 0; y < tileAreaSplice.width; y++) {\n\t\t\t\t\ttileAreaSplice.tiles[tileAreaSplice.getTileIndex(x, y)]\n\t\t\t\t\t\t.tileId.should.equal(tiles[x + y * areaWidth].tileId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tit(\"returns the correct dimmensions\", () => {\n\t\t\tconst tileAreaSplice = tileArea.getTileArea(0, 5, 3, 2);\n\t\t\ttileAreaSplice.width.should.equal(3);\n\t\t\ttileAreaSplice.height.should.equal(2);\n\t\t});\n\t\tit(\"crashes if out of bounds\", () => {\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileArea(areaWidth, 0, 50);\n\t\t\t}).should.throw(RangeError);\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileArea(areaWidth - 2, 0, 5, 1);\n\t\t\t}).should.throw(RangeError);\n\t\t});\n\t\tit(\"crashes if rectangle is invalid\", () => {\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileArea(0, 0, -1, 1);\n\t\t\t}).should.throw(RangeError);\n\t\t\t(() => {\n\t\t\t\ttileArea.getTileArea(0, 0, 1, 0);\n\t\t\t}).should.throw(RangeError);\n\t\t});\n\t});\n\n\t/** @test {TileArea#getTilingTileData} */\n\tdescribe(\"#getTilingTileData\", () => {\n\t\tit(\"gets the right tile forward\", () => {\n\t\t\tconst v = Math.floor(Math.random() * areaWidth);\n\t\t\tconst vTile = tileArea.tiles[tileArea.getTileIndex(v, v)];\n\t\t\ttileArea.getTilingTileData(0, 0, areaWidth + v, v).should.deep.equal(vTile);\n\t\t});\n\t\tit(\"gets the right tile backwards\", () => {\n\t\t\tconst v = Math.floor(Math.random() * areaWidth);\n\t\t\tconst vTile = tileArea.tiles[tileArea.getTileIndex(v, v)];\n\t\t\ttileArea.getTilingTileData(0, 0, v - areaWidth, v).should.deep.equal(vTile);\n\t\t});\n\t\tit(\"gets the right tile far backwards\", () => {\n\t\t\t// Note: getting backwards usually causes trouble, so this is for my\n\t\t\t// own sanity - Ellie\n\t\t\tconst v = Math.floor(Math.random() * areaWidth);\n\t\t\tconst vTile = tileArea.tiles[tileArea.getTileIndex(v, v)];\n\t\t\ttileArea.getTilingTileData(0, 0, v - areaWidth * 100, v).should.deep.equal(vTile);\n\t\t});\n\t});\n\n\t/** @test {TileArea#insertTileArea} */\n\tdescribe(\"#insertTileArea\", () => {\n\t\tconst smallAreaWidth = 3, smallAreaHeight = 3;\n\t\tlet smallTileArea;\n\n\t\tbeforeEach(() => {\n\t\t\tconst tiles = [];\n\t\t\tfor (let i = 0; i < smallAreaWidth * smallAreaHeight; i++) {\n\t\t\t\ttiles.push(new Tile({\n\t\t\t\t\ttileId: parseInt(Math.random() * 100)\n\t\t\t\t}));\n\t\t\t}\n\t\t\tsmallTileArea = new TileArea(smallAreaWidth, smallAreaHeight, tiles);\n\t\t});\n\n\t\tit(\"inserts a tile area correctly\", () => {\n\t\t\tconst x = parseInt((areaWidth - smallAreaWidth) / 2);\n\t\t\tconst y = parseInt((areaHeight - smallAreaHeight) / 2);\n\t\t\ttileArea.insertTileArea(x, y, smallTileArea);\n\n\t\t\ttileArea.getTileArea(x, y, smallAreaWidth, smallAreaHeight)\n\t\t\t\t.should.deep.equal(smallTileArea);\n\t\t});\n\t\tit(\"can skip empty (-1) tiles\", () => {\n\t\t\ttileArea.insertTileArea(\n\t\t\t\t0, 0,\n\t\t\t\tnew TileArea(1, 1, [new Tile({ tileId: -1 })]),\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\ttileArea.getTileArea(0, 0, 1, 1).tiles[0].tileId.should.not.equal(-1);\n\t\t});\n\t\tit(\"doesn't crash when going out of bounds\", () => {\n\t\t\tconst x = -smallAreaWidth + 1;\n\t\t\tconst y = -smallAreaHeight + 1;\n\t\t\ttileArea.insertTileArea(x, y, smallTileArea);\n\n\t\t\ttileArea.getTileArea(0, 0, 1, 1).tiles[0].tileId.should.equal(\n\t\t\t\tsmallTileArea.tiles[smallTileArea.tiles.length - 1].tileId\n\t\t\t);\n\t\t});\n\t});\n\n\t/** @test {TileArea#resize} */\n\tdescribe(\"#resize\", () => {\n\t\tlet newWidth, newHeight;\n\n\t\tconst shrink = () => {\n\t\t\tnewWidth = areaWidth / 2;\n\t\t\tnewHeight = areaHeight / 2;\n\t\t\ttileArea.resize(newWidth, newHeight);\n\t\t};\n\t\tconst grow = () => {\n\t\t\tnewWidth = areaWidth * 2;\n\t\t\tnewHeight = areaHeight * 2;\n\t\t\ttileArea.resize(newWidth, newHeight);\n\t\t};\n\t\tconst unevenResize = () => {\n\t\t\tnewWidth = areaWidth * 2;\n\t\t\tnewHeight = areaHeight / 2;\n\t\t};\n\n\t\tit(\"can shrink dimmensions\", () => {\n\t\t\tshrink();\n\t\t\ttileArea.width.should.equal(newWidth);\n\t\t\ttileArea.height.should.equal(newHeight);\n\t\t});\n\t\tit(\"can grow dimmensions\", () => {\n\t\t\tgrow();\n\t\t\ttileArea.width.should.equal(newWidth);\n\t\t\ttileArea.height.should.equal(newHeight);\n\t\t});\n\t\tit(\"keeps tiles intact\", () => {\n\t\t\tconst aTileX = 5;\n\t\t\tconst aTileY = 6;\n\t\t\tconst aTile = tileArea.getTileArea(aTileX, aTileY, 1, 1).tiles[0];\n\t\t\tshrink();\n\t\t\ttileArea.getTileArea(aTileX, aTileY, 1, 1).tiles[0].should.equal(aTile);\n\t\t\tgrow();\n\t\t\ttileArea.getTileArea(aTileX, aTileY, 1, 1).tiles[0].should.equal(aTile);\n\t\t\tunevenResize();\n\t\t\ttileArea.getTileArea(aTileX, aTileY, 1, 1).tiles[0].should.equal(aTile);\n\t\t});\n\t\tit(\"adds empty tiles when growing\", () => {\n\t\t\tgrow();\n\t\t\ttileArea.tiles[tileArea.getTileIndex(newWidth - 1, newHeight - 1)].tileId.should.equal(-1);\n\t\t});\n\t});\n\n\t/** @test {TileArea#fillAt} */\n\tdescribe(\"#fillAt\", () => {\n\t\tconst fillTileArea = new TileArea(2, 2, [\n\t\t\tnew Tile(\"2:0\"), new Tile(\"3:0\"),\n\t\t\tnew Tile(\"3:0\"), new Tile(\"2:0\")\n\t\t]);\n\n\t\tbeforeEach(() => {\n\t\t\ttileArea.tiles.forEach(tile => {\n\t\t\t\ttile.setData(0, 0);\n\t\t\t});\n\t\t\ttileArea.tiles[10].setData(1, 0);\n\t\t\ttileArea.tiles[20].setData(0, 1);\n\t\t});\n\n\t\tit(\"fills correctly\", () => {\n\t\t\ttileArea.fillAt(2, 2, fillTileArea);\n\t\t\ttileArea.tiles[0].tileId.should.equal(2);\n\t\t\ttileArea.tiles[2].tileId.should.equal(2);\n\t\t});\n\t\tit(\"tiles correctly\", () => {\n\t\t\ttileArea.fillAt(2, 2, fillTileArea);\n\t\t\ttileArea.tiles[1].tileId.should.equal(3);\n\t\t\ttileArea.tiles[3].tileId.should.equal(3);\n\t\t});\n\t\tit(\"doesn't overwrite anything it shouldn't\", () => {\n\t\t\ttileArea.fillAt(0, 0, fillTileArea);\n\t\t\ttileArea.tiles[10].tileId.should.not.equal(2);\n\t\t});\n\t\tit(\"respects tileset ID's\", () => {\n\t\t\ttileArea.fillAt(0, 0, fillTileArea);\n\t\t\ttileArea.tiles[10].tileId.should.not.equal(2);\n\t\t});\n\t\tit(\"doesn't end up in a loop\", () => {\n\t\t\tconst otherFillTileArea = new TileArea(1, 1, [new Tile(\"0:0\")]);\n\t\t\ttileArea.fillAt(0, 0, otherFillTileArea);\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 195,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe42",
    "testId": 42,
    "memberof": "test/tilearea.js",
    "testDepth": 0,
    "longname": "test/tilearea.js~describe42",
    "access": null,
    "description": "TileArea",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea}"
      }
    ],
    "testTargets": [
      "TileArea"
    ]
  },
  {
    "__docId__": 196,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe43",
    "testId": 43,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe43",
    "access": null,
    "description": "#constructor",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#constructor}"
      }
    ],
    "testTargets": [
      "TileArea#constructor"
    ]
  },
  {
    "__docId__": 197,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "test/tilearea.js~describe42.describe43",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe43.it44",
    "access": null,
    "description": "rejects non-tile objects",
    "lineNumber": 25
  },
  {
    "__docId__": 198,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it45",
    "testId": 45,
    "memberof": "test/tilearea.js~describe42.describe43",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe43.it45",
    "access": null,
    "description": "requires width and height to equal amount of tiles",
    "lineNumber": 32
  },
  {
    "__docId__": 199,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe46",
    "testId": 46,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe46",
    "access": null,
    "description": "#getTileIndex",
    "lineNumber": 41,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#getTileIndex}"
      }
    ],
    "testTargets": [
      "TileArea#getTileIndex"
    ]
  },
  {
    "__docId__": 200,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it47",
    "testId": 47,
    "memberof": "test/tilearea.js~describe42.describe46",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe46.it47",
    "access": null,
    "description": "returns the right index",
    "lineNumber": 42
  },
  {
    "__docId__": 201,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it48",
    "testId": 48,
    "memberof": "test/tilearea.js~describe42.describe46",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe46.it48",
    "access": null,
    "description": "crashes if out of bounds",
    "lineNumber": 46
  },
  {
    "__docId__": 202,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe49",
    "testId": 49,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe49",
    "access": null,
    "description": "#getTileArea",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#getTileArea}"
      }
    ],
    "testTargets": [
      "TileArea#getTileArea"
    ]
  },
  {
    "__docId__": 203,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it50",
    "testId": 50,
    "memberof": "test/tilearea.js~describe42.describe49",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe49.it50",
    "access": null,
    "description": "returns the correct tiles",
    "lineNumber": 58
  },
  {
    "__docId__": 204,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "test/tilearea.js~describe42.describe49",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe49.it51",
    "access": null,
    "description": "returns the correct dimmensions",
    "lineNumber": 67
  },
  {
    "__docId__": 205,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it52",
    "testId": 52,
    "memberof": "test/tilearea.js~describe42.describe49",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe49.it52",
    "access": null,
    "description": "crashes if out of bounds",
    "lineNumber": 72
  },
  {
    "__docId__": 206,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it53",
    "testId": 53,
    "memberof": "test/tilearea.js~describe42.describe49",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe49.it53",
    "access": null,
    "description": "crashes if rectangle is invalid",
    "lineNumber": 80
  },
  {
    "__docId__": 207,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe54",
    "testId": 54,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe54",
    "access": null,
    "description": "#getTilingTileData",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#getTilingTileData}"
      }
    ],
    "testTargets": [
      "TileArea#getTilingTileData"
    ]
  },
  {
    "__docId__": 208,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it55",
    "testId": 55,
    "memberof": "test/tilearea.js~describe42.describe54",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe54.it55",
    "access": null,
    "description": "gets the right tile forward",
    "lineNumber": 92
  },
  {
    "__docId__": 209,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "test/tilearea.js~describe42.describe54",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe54.it56",
    "access": null,
    "description": "gets the right tile backwards",
    "lineNumber": 97
  },
  {
    "__docId__": 210,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "test/tilearea.js~describe42.describe54",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe54.it57",
    "access": null,
    "description": "gets the right tile far backwards",
    "lineNumber": 102
  },
  {
    "__docId__": 211,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe58",
    "testId": 58,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe58",
    "access": null,
    "description": "#insertTileArea",
    "lineNumber": 112,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#insertTileArea}"
      }
    ],
    "testTargets": [
      "TileArea#insertTileArea"
    ]
  },
  {
    "__docId__": 212,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "test/tilearea.js~describe42.describe58",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe58.it59",
    "access": null,
    "description": "inserts a tile area correctly",
    "lineNumber": 126
  },
  {
    "__docId__": 213,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it60",
    "testId": 60,
    "memberof": "test/tilearea.js~describe42.describe58",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe58.it60",
    "access": null,
    "description": "can skip empty (-1) tiles",
    "lineNumber": 134
  },
  {
    "__docId__": 214,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it61",
    "testId": 61,
    "memberof": "test/tilearea.js~describe42.describe58",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe58.it61",
    "access": null,
    "description": "doesn't crash when going out of bounds",
    "lineNumber": 143
  },
  {
    "__docId__": 215,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe62",
    "testId": 62,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe62",
    "access": null,
    "description": "#resize",
    "lineNumber": 155,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#resize}"
      }
    ],
    "testTargets": [
      "TileArea#resize"
    ]
  },
  {
    "__docId__": 216,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it63",
    "testId": 63,
    "memberof": "test/tilearea.js~describe42.describe62",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe62.it63",
    "access": null,
    "description": "can shrink dimmensions",
    "lineNumber": 173
  },
  {
    "__docId__": 217,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it64",
    "testId": 64,
    "memberof": "test/tilearea.js~describe42.describe62",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe62.it64",
    "access": null,
    "description": "can grow dimmensions",
    "lineNumber": 178
  },
  {
    "__docId__": 218,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it65",
    "testId": 65,
    "memberof": "test/tilearea.js~describe42.describe62",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe62.it65",
    "access": null,
    "description": "keeps tiles intact",
    "lineNumber": 183
  },
  {
    "__docId__": 219,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "test/tilearea.js~describe42.describe62",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe62.it66",
    "access": null,
    "description": "adds empty tiles when growing",
    "lineNumber": 194
  },
  {
    "__docId__": 220,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe67",
    "testId": 67,
    "memberof": "test/tilearea.js~describe42",
    "testDepth": 1,
    "longname": "test/tilearea.js~describe42.describe67",
    "access": null,
    "description": "#fillAt",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileArea#fillAt}"
      }
    ],
    "testTargets": [
      "TileArea#fillAt"
    ]
  },
  {
    "__docId__": 221,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "test/tilearea.js~describe42.describe67",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe67.it68",
    "access": null,
    "description": "fills correctly",
    "lineNumber": 215
  },
  {
    "__docId__": 222,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it69",
    "testId": 69,
    "memberof": "test/tilearea.js~describe42.describe67",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe67.it69",
    "access": null,
    "description": "tiles correctly",
    "lineNumber": 220
  },
  {
    "__docId__": 223,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "test/tilearea.js~describe42.describe67",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe67.it70",
    "access": null,
    "description": "doesn't overwrite anything it shouldn't",
    "lineNumber": 225
  },
  {
    "__docId__": 224,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it71",
    "testId": 71,
    "memberof": "test/tilearea.js~describe42.describe67",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe67.it71",
    "access": null,
    "description": "respects tileset ID's",
    "lineNumber": 229
  },
  {
    "__docId__": 225,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "test/tilearea.js~describe42.describe67",
    "testDepth": 2,
    "longname": "test/tilearea.js~describe42.describe67.it72",
    "access": null,
    "description": "doesn't end up in a loop",
    "lineNumber": 233
  },
  {
    "__docId__": 226,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tilelayer.js",
    "memberof": null,
    "longname": "test/tilelayer.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should as chaiShould } from \"chai\";\n\nimport { TileLayer } from \"../src\";\n\nconst should = chaiShould();\n\n/** @test {TileLayer} */\ndescribe(\"TileLayer\", () => {\n\t/** @test {TileLayer#toJSON} */\n\tdescribe(\"#toJSON\", () => {\n\t\tit(\"doesn't keep width and height from TileArea\", () => {\n\t\t\tconst tileLayer = new TileLayer({\n\t\t\t\t// Hack to skip having to create a map.\n\t\t\t\twidth: 10, height: 10\n\t\t\t}, {});\n\t\t\tconst layerObject = JSON.parse(JSON.stringify(tileLayer));\n\t\t\tshould.not.exist(layerObject.width);\n\t\t\tshould.not.exist(layerObject.height);\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 227,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe73",
    "testId": 73,
    "memberof": "test/tilelayer.js",
    "testDepth": 0,
    "longname": "test/tilelayer.js~describe73",
    "access": null,
    "description": "TileLayer",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileLayer}"
      }
    ],
    "testTargets": [
      "TileLayer"
    ]
  },
  {
    "__docId__": 228,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe74",
    "testId": 74,
    "memberof": "test/tilelayer.js~describe73",
    "testDepth": 1,
    "longname": "test/tilelayer.js~describe73.describe74",
    "access": null,
    "description": "#toJSON",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileLayer#toJSON}"
      }
    ],
    "testTargets": [
      "TileLayer#toJSON"
    ]
  },
  {
    "__docId__": 229,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it75",
    "testId": 75,
    "memberof": "test/tilelayer.js~describe73.describe74",
    "testDepth": 2,
    "longname": "test/tilelayer.js~describe73.describe74.it75",
    "access": null,
    "description": "doesn't keep width and height from TileArea",
    "lineNumber": 11
  },
  {
    "__docId__": 230,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tilemap.js",
    "memberof": null,
    "longname": "test/tilemap.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should as chaiShould } from \"chai\";\n\nimport { TileMap } from \"../src\";\nimport testmap from \"./testmap\";\n\nconst should = chaiShould();\n\n/** @test {TileMap} */\ndescribe(\"TileMap\", () => {\n\tconst mapName = \"a map name\",\n\t\tmapWidth = 10,\n\t\tmapHeight = 10,\n\t\ttileWidth = 16,\n\t\ttileHeight = 16;\n\n\tlet tilemap;\n\n\tbeforeEach(() => {\n\t\ttilemap = new TileMap({\n\t\t\tname: mapName,\n\t\t\twidth: mapWidth,\n\t\t\theight: mapHeight,\n\t\t\ttileWidth,\n\t\t\ttileHeight,\n\n\t\t\tlayers: [\n\t\t\t\t{}, {}, {}\n\t\t\t]\n\t\t});\n\t});\n\n\t/** @test {TileMap#constructor} */\n\tdescribe(\"#constructor\", () => {\n\t\tit(\"has a name\", () => {\n\t\t\ttilemap.name.should.equal(mapName);\n\t\t});\n\t\tit(\"has dimmensions\", () => {\n\t\t\ttilemap.width.should.be.a(\"number\");\n\t\t\ttilemap.height.should.be.a(\"number\");\n\n\t\t\ttilemap.width.should.equal(mapWidth);\n\t\t\ttilemap.height.should.equal(mapHeight);\n\t\t});\n\t\tit(\"has tile size\", () => {\n\t\t\ttilemap.tileWidth.should.be.a(\"number\");\n\t\t\ttilemap.tileHeight.should.be.a(\"number\");\n\t\t});\n\t\tit(\"has layers\", () => {\n\t\t\ttilemap.layers.should.have.length(3);\n\t\t});\n\t\tit(\"has properties for layers\", () => {\n\t\t\ttilemap.layers[0].name.should.be.a(\"string\");\n\t\t});\n\t\tit(\"reads a valid tilemap JSON\", () => {\n\t\t\ttilemap = new TileMap(testmap);\n\t\t\ttilemap.name.should.equal(\"test map\");\n\t\t\ttilemap.layers[0].tiles[23].tileId.should.equal(1);\n\t\t});\n\t\tit(\"has correct default values\", () => {\n\t\t\tconst tilemap = new TileMap({});\n\t\t\ttilemap.name.should.be.a(\"string\");\n\t\t\ttilemap.layers.should.be.an(\"array\");\n\t\t});\n\t});\n\n\t/** @test {TileMap#resize} */\n\tdescribe(\"#resize\", () => {\n\t\tconst newWidth = mapWidth / 2, newHeight = mapHeight / 2;\n\t\tbeforeEach(() => {\n\t\t\ttilemap.resize(newWidth, newHeight);\n\t\t});\n\n\t\tit(\"changes the size of the map\", () => {\n\t\t\ttilemap.width.should.equal(newWidth);\n\t\t\ttilemap.height.should.equal(newHeight);\n\t\t});\n\t\tit(\"changes the size of all layers\", () => {\n\t\t\tfor (let layer of tilemap.layers) {\n\t\t\t\tlayer.width.should.equal(newWidth);\n\t\t\t\tlayer.height.should.equal(newHeight);\n\t\t\t}\n\t\t});\n\t});\n\n\t/** @test {TileMap#takeDataBuffer} */\n\tdescribe(\"#takeDataBuffer\", () => {\n\t\tit(\"returns empty array when no change has happened\", () => {\n\t\t\ttilemap.takeDataBuffer().should.deep.equal([]);\n\t\t});\n\t\tit(\"returns both new and old values\", () => {\n\t\t\ttilemap.layers[0].tiles[10].setData(5, 10);\n\t\t\ttilemap.layers[1].tiles[20].setData(10, 20);\n\t\t\ttilemap.layers[2].tiles[30].setData(20, 40);\n\n\t\t\ttilemap.takeDataBuffer().should.deep.equal([\n\t\t\t\t[0, 10, [-1, 0], [5, 10]],\n\t\t\t\t[1, 20, [-1, 0], [10, 20]],\n\t\t\t\t[2, 30, [-1, 0], [20, 40]]\n\t\t\t]);\n\t\t});\n\t\tit(\"empties data buffer when taken\", () => {\n\t\t\ttilemap.layers[0].tiles[25].setData(1, 1);\n\t\t\ttilemap.takeDataBuffer();\n\t\t\ttilemap.takeDataBuffer().should.deep.equal([]);\n\t\t});\n\t});\n\n\t/** @test {TileMap#getJSON} */\n\tdescribe(\"#getJSON\", () => {\n\t\tit(\"returns a valid JSON string\", () => {\n\t\t\tJSON.parse(tilemap.getJSON());\n\t\t});\n\t\tit(\"doesn't parse private properties\", () => {\n\t\t\ttilemap._property = \"foo\";\n\t\t\tshould.not.exist(JSON.parse(tilemap.getJSON())._property);\n\t\t});\n\t\tit(\"can be parsed back to a map object\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew TileMap(JSON.parse(tilemap.getJSON()));\n\t\t\t}).should.not.throw(Error);\n\t\t});\n\t\tit(\"still has width and height properties after parsing\", () => {\n\t\t\tconst map = JSON.parse(tilemap.getJSON());\n\t\t\tmap.width.should.be.a(\"number\");\n\t\t\tmap.height.should.be.a(\"number\");\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 231,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe76",
    "testId": 76,
    "memberof": "test/tilemap.js",
    "testDepth": 0,
    "longname": "test/tilemap.js~describe76",
    "access": null,
    "description": "TileMap",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileMap}"
      }
    ],
    "testTargets": [
      "TileMap"
    ]
  },
  {
    "__docId__": 232,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe77",
    "testId": 77,
    "memberof": "test/tilemap.js~describe76",
    "testDepth": 1,
    "longname": "test/tilemap.js~describe76.describe77",
    "access": null,
    "description": "#constructor",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileMap#constructor}"
      }
    ],
    "testTargets": [
      "TileMap#constructor"
    ]
  },
  {
    "__docId__": 233,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it78",
    "testId": 78,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it78",
    "access": null,
    "description": "has a name",
    "lineNumber": 34
  },
  {
    "__docId__": 234,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it79",
    "testId": 79,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it79",
    "access": null,
    "description": "has dimmensions",
    "lineNumber": 37
  },
  {
    "__docId__": 235,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it80",
    "testId": 80,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it80",
    "access": null,
    "description": "has tile size",
    "lineNumber": 44
  },
  {
    "__docId__": 236,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it81",
    "testId": 81,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it81",
    "access": null,
    "description": "has layers",
    "lineNumber": 48
  },
  {
    "__docId__": 237,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it82",
    "testId": 82,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it82",
    "access": null,
    "description": "has properties for layers",
    "lineNumber": 51
  },
  {
    "__docId__": 238,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it83",
    "access": null,
    "description": "reads a valid tilemap JSON",
    "lineNumber": 54
  },
  {
    "__docId__": 239,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it84",
    "testId": 84,
    "memberof": "test/tilemap.js~describe76.describe77",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe77.it84",
    "access": null,
    "description": "has correct default values",
    "lineNumber": 59
  },
  {
    "__docId__": 240,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe85",
    "testId": 85,
    "memberof": "test/tilemap.js~describe76",
    "testDepth": 1,
    "longname": "test/tilemap.js~describe76.describe85",
    "access": null,
    "description": "#resize",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileMap#resize}"
      }
    ],
    "testTargets": [
      "TileMap#resize"
    ]
  },
  {
    "__docId__": 241,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it86",
    "testId": 86,
    "memberof": "test/tilemap.js~describe76.describe85",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe85.it86",
    "access": null,
    "description": "changes the size of the map",
    "lineNumber": 73
  },
  {
    "__docId__": 242,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it87",
    "testId": 87,
    "memberof": "test/tilemap.js~describe76.describe85",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe85.it87",
    "access": null,
    "description": "changes the size of all layers",
    "lineNumber": 77
  },
  {
    "__docId__": 243,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe88",
    "testId": 88,
    "memberof": "test/tilemap.js~describe76",
    "testDepth": 1,
    "longname": "test/tilemap.js~describe76.describe88",
    "access": null,
    "description": "#takeDataBuffer",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileMap#takeDataBuffer}"
      }
    ],
    "testTargets": [
      "TileMap#takeDataBuffer"
    ]
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "test/tilemap.js~describe76.describe88",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe88.it89",
    "access": null,
    "description": "returns empty array when no change has happened",
    "lineNumber": 87
  },
  {
    "__docId__": 245,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it90",
    "testId": 90,
    "memberof": "test/tilemap.js~describe76.describe88",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe88.it90",
    "access": null,
    "description": "returns both new and old values",
    "lineNumber": 90
  },
  {
    "__docId__": 246,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it91",
    "testId": 91,
    "memberof": "test/tilemap.js~describe76.describe88",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe88.it91",
    "access": null,
    "description": "empties data buffer when taken",
    "lineNumber": 101
  },
  {
    "__docId__": 247,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe92",
    "testId": 92,
    "memberof": "test/tilemap.js~describe76",
    "testDepth": 1,
    "longname": "test/tilemap.js~describe76.describe92",
    "access": null,
    "description": "#getJSON",
    "lineNumber": 109,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileMap#getJSON}"
      }
    ],
    "testTargets": [
      "TileMap#getJSON"
    ]
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it93",
    "testId": 93,
    "memberof": "test/tilemap.js~describe76.describe92",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe92.it93",
    "access": null,
    "description": "returns a valid JSON string",
    "lineNumber": 110
  },
  {
    "__docId__": 249,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it94",
    "testId": 94,
    "memberof": "test/tilemap.js~describe76.describe92",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe92.it94",
    "access": null,
    "description": "doesn't parse private properties",
    "lineNumber": 113
  },
  {
    "__docId__": 250,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it95",
    "testId": 95,
    "memberof": "test/tilemap.js~describe76.describe92",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe92.it95",
    "access": null,
    "description": "can be parsed back to a map object",
    "lineNumber": 117
  },
  {
    "__docId__": 251,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it96",
    "testId": 96,
    "memberof": "test/tilemap.js~describe76.describe92",
    "testDepth": 2,
    "longname": "test/tilemap.js~describe76.describe92.it96",
    "access": null,
    "description": "still has width and height properties after parsing",
    "lineNumber": 123
  },
  {
    "__docId__": 252,
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "test/tileset.js",
    "memberof": null,
    "longname": "test/tileset.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import { should as chaiShould } from \"chai\";\n\nimport { TileSet } from \"../src\";\n\nconst should = chaiShould();\n\n/** @test {TileSet} */\ndescribe(\"TileSet\", () => {\n\t/** @test {TileSet#constructor} */\n\tdescribe(\"#constructor\", () => {\n\t\tit(\"creates with default values\", () => {\n\t\t\tconst tileset = new TileSet({});\n\t\t\ttileset.name.should.be.a(\"string\");\n\t\t\ttileset.type.should.be.a(\"string\");\n\t\t\tshould.not.exist(tileset.path);\n\t\t});\n\t\tit(\"creates with definded values\", () => {\n\t\t\tconst name = \"hello\",\n\t\t\t\ttype = \"image\",\n\t\t\t\tpath = \"./some/path.png\",\n\t\t\t\tvirtualPath = \"./some/other/path.png\",\n\t\t\t\ttileset = new TileSet({ name, type, path, virtualPath });\n\t\t\ttileset.name.should.equal(name);\n\t\t\ttileset.type.should.equal(type);\n\t\t\ttileset.path.should.equal(path);\n\t\t\ttileset.virtualPath.should.equal(virtualPath);\n\t\t});\n\t\tit(\"defaults virtual path to normal path\", () => {\n\t\t\tconst path = \"./a/path.png\",\n\t\t\t\ttileset = new TileSet({ path });\n\t\t\ttileset.virtualPath.should.equal(path);\n\t\t});\n\t\tit(\"fails if any tile properties key isn't a number\", () => {\n\t\t\t(() => {\n\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\tnew TileSet({ tileProperties: {\n\t\t\t\t\t\"a string\": \"should be invalid\"\n\t\t\t\t} });\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {TileSet#getTileProperties} */\n\tdescribe(\"#getTileProperty\", () => {\n\t\tlet tileset;\n\n\t\tbeforeEach(() => {\n\t\t\ttileset = new TileSet({\n\t\t\t\ttileProperties: {\n\t\t\t\t\t\"0\": [[\"test\", \"isTest\"]],\n\t\t\t\t\t\"5\": [[\"test5\", \"is5\"]]\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tit(\"gets a property object correctly\", () => {\n\t\t\ttileset.getTileProperties(0).get(\"test\").should.equal(\"isTest\");\n\t\t\ttileset.getTileProperties(5).get(\"test5\").should.equal(\"is5\");\n\t\t});\n\n\t\tit(\"throws an error if ID doesn't have a properties object\", () => {\n\t\t\t(() => {\n\t\t\t\ttileset.getTileProperties(10);\n\t\t\t}).should.throw(RangeError);\n\t\t});\n\n\t\tit(\"fails if argument isn't a number\", () => {\n\t\t\t(() => {\n\t\t\t\ttileset.getTileProperties(\"a string\");\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {TileSet#createTileProperties} */\n\tdescribe(\"#createTileProperties\", () => {\n\t\tit(\"creates a tile property for a tile ID\", () => {\n\t\t\tconst tileset = new TileSet({});\n\t\t\ttileset.createTileProperties(2);\n\t\t\ttileset.hasTileProperties(2).should.be.ok;\n\t\t});\n\n\t\tit(\"fails if argument isn't a number\", () => {\n\t\t\t(() => {\n\t\t\t\tnew TileSet({}).createTileProperties(\"a string\");\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n\n\t/** @test {TileSet#hasTileProperties} */\n\tdescribe(\"#hasTileProperties\", () => {\n\t\tit(\"checks if there is a tile property object for an ID\", () => {\n\t\t\tconst tileset = new TileSet({\n\t\t\t\ttileProperties: {\n\t\t\t\t\t\"4\": [[\"key\", \"value\"]]\n\t\t\t\t}\n\t\t\t});\n\t\t\ttileset.hasTileProperties(4).should.be.ok;\n\t\t\ttileset.hasTileProperties(0).should.not.be.ok;\n\t\t});\n\n\t\tit(\"fails if argument isn't a number\", () => {\n\t\t\t(() => {\n\t\t\t\tnew TileSet({}).hasTileProperties(\"a string\");\n\t\t\t}).should.throw(TypeError);\n\t\t});\n\t});\n});\n"
  },
  {
    "__docId__": 253,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe97",
    "testId": 97,
    "memberof": "test/tileset.js",
    "testDepth": 0,
    "longname": "test/tileset.js~describe97",
    "access": null,
    "description": "TileSet",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileSet}"
      }
    ],
    "testTargets": [
      "TileSet"
    ]
  },
  {
    "__docId__": 254,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe98",
    "testId": 98,
    "memberof": "test/tileset.js~describe97",
    "testDepth": 1,
    "longname": "test/tileset.js~describe97.describe98",
    "access": null,
    "description": "#constructor",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileSet#constructor}"
      }
    ],
    "testTargets": [
      "TileSet#constructor"
    ]
  },
  {
    "__docId__": 255,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it99",
    "testId": 99,
    "memberof": "test/tileset.js~describe97.describe98",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe98.it99",
    "access": null,
    "description": "creates with default values",
    "lineNumber": 11
  },
  {
    "__docId__": 256,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it100",
    "testId": 100,
    "memberof": "test/tileset.js~describe97.describe98",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe98.it100",
    "access": null,
    "description": "creates with definded values",
    "lineNumber": 17
  },
  {
    "__docId__": 257,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it101",
    "testId": 101,
    "memberof": "test/tileset.js~describe97.describe98",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe98.it101",
    "access": null,
    "description": "defaults virtual path to normal path",
    "lineNumber": 28
  },
  {
    "__docId__": 258,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it102",
    "testId": 102,
    "memberof": "test/tileset.js~describe97.describe98",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe98.it102",
    "access": null,
    "description": "fails if any tile properties key isn't a number",
    "lineNumber": 33
  },
  {
    "__docId__": 259,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe103",
    "testId": 103,
    "memberof": "test/tileset.js~describe97",
    "testDepth": 1,
    "longname": "test/tileset.js~describe97.describe103",
    "access": null,
    "description": "#getTileProperty",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileSet#getTileProperties}"
      }
    ],
    "testTargets": [
      "TileSet#getTileProperties"
    ]
  },
  {
    "__docId__": 260,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it104",
    "testId": 104,
    "memberof": "test/tileset.js~describe97.describe103",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe103.it104",
    "access": null,
    "description": "gets a property object correctly",
    "lineNumber": 56
  },
  {
    "__docId__": 261,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it105",
    "testId": 105,
    "memberof": "test/tileset.js~describe97.describe103",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe103.it105",
    "access": null,
    "description": "throws an error if ID doesn't have a properties object",
    "lineNumber": 61
  },
  {
    "__docId__": 262,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it106",
    "testId": 106,
    "memberof": "test/tileset.js~describe97.describe103",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe103.it106",
    "access": null,
    "description": "fails if argument isn't a number",
    "lineNumber": 67
  },
  {
    "__docId__": 263,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe107",
    "testId": 107,
    "memberof": "test/tileset.js~describe97",
    "testDepth": 1,
    "longname": "test/tileset.js~describe97.describe107",
    "access": null,
    "description": "#createTileProperties",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileSet#createTileProperties}"
      }
    ],
    "testTargets": [
      "TileSet#createTileProperties"
    ]
  },
  {
    "__docId__": 264,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it108",
    "testId": 108,
    "memberof": "test/tileset.js~describe97.describe107",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe107.it108",
    "access": null,
    "description": "creates a tile property for a tile ID",
    "lineNumber": 76
  },
  {
    "__docId__": 265,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it109",
    "testId": 109,
    "memberof": "test/tileset.js~describe97.describe107",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe107.it109",
    "access": null,
    "description": "fails if argument isn't a number",
    "lineNumber": 82
  },
  {
    "__docId__": 266,
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe110",
    "testId": 110,
    "memberof": "test/tileset.js~describe97",
    "testDepth": 1,
    "longname": "test/tileset.js~describe97.describe110",
    "access": null,
    "description": "#hasTileProperties",
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{TileSet#hasTileProperties}"
      }
    ],
    "testTargets": [
      "TileSet#hasTileProperties"
    ]
  },
  {
    "__docId__": 267,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it111",
    "testId": 111,
    "memberof": "test/tileset.js~describe97.describe110",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe110.it111",
    "access": null,
    "description": "checks if there is a tile property object for an ID",
    "lineNumber": 91
  },
  {
    "__docId__": 268,
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it112",
    "testId": 112,
    "memberof": "test/tileset.js~describe97.describe110",
    "testDepth": 2,
    "longname": "test/tileset.js~describe97.describe110.it112",
    "access": null,
    "description": "fails if argument isn't a number",
    "lineNumber": 101
  }
]